{
    "collab_server" : "",
    "contents" : "library(tm)\n\n#아래 코드를 수행하기 이전에 반드시 DTM을 생성해야 합니다.\n#text_handling.R 소스코드 참고 하세요.\n\n#======================================\n# 연관키워드 추출하기\n#======================================\n# \"냉장고\"의 연관 키워드 구하기\nfindAssocs(dtm, terms = \"냉장고\", corlimit = 0.2)\n\n#직접 단어간 상관관계 구하기\ndtm_m = as.matrix(dtm)\ncor_term = cor(dtm_m)\ncor_ref = cor_term[,\"냉장고\"]\n\n#TF-IDF 값으로 연관 키워드 추출하기\ndtmW = DocumentTermMatrix(corp, control=list(removeNumbers=FALSE,\n                                              wordLengths=c(2,Inf),\n                                              weighting = function(x) weightTfIdf(x, normalize = TRUE))) #Tf-Idf 가중치 주기\n\n## 단어 양옆 스페이스 제거 및 한글자 단어 제외하기\ncolnames(dtm) = trimws(colnames(dtm))\ndtm = dtm[,nchar(colnames(dtm)) > 1]\n\ndtmW = removeSparseTerms(dtmW, as.numeric(0.96))\n\nfindAssocs(dtmW, \"냉장고\", 0.2)\n\n#======================================\n# 연관키워드 네트워크 맵 그리기\n#======================================\ninstall.packages(c(\"igraph\", \"network\", \"sna\", \"GGally\")) #패키지 한꺼번에 설치하기\nlibrary(igraph)\nlibrary(network)\nlibrary(sna)\nlibrary(ggplot2)\nlibrary(GGally)\n\n#Network Map용 데이터 만들기 (단어 X 단어 상관계수 매트릭스 생성)\ndtmW_m = as.matrix(dtmW)\ncor_termW = cor(dtmW_m)\n\n#Edge 개수 조절하기\ncor_termW[cor_termW < 0.1] = 0\n\n# Network Map을 그리기 위한 객체 만들기\nnet = network(cor_termW, directed = FALSE)\n\n# Network의 betweenness값을 구하여 상위 10% 이상인 node에는 노란색 입혀주기\nnet %v% \"mode\" <- ifelse(betweenness(net) > quantile(betweenness(net), 0.9), \"big\", \"small\")\nnode_color = c(\"small\" = \"grey\", \"big\" = \"gold\")\n\n# Network edge size 값 설정하기 (단어간 상관계수 값 * 2)\nset.edge.value(net, \"edgeSize\", cor_termW * 2)\n\n# Network Map 화면에 그리기\nggnet2(net # 네트워크 객체\n       ,label=TRUE # 노드에 라벨 표현 여부\n       ,label.size = 3 # 라벨 폰트 사이즈\n       ,color = \"mode\" # 노드 색상 구준 기준\n       ,palette = node_color # 노드 색상\n       ,size = \"degree\" # 노드의 크기를 degree cetrality값에 따라 다르게 하기\n       ,edge.size = \"edgeSize\" # 엣지의 굵기를 위에서 계산한 단어간 상관계수에 따라 다르게 하기\n       ,family=\"AppleGothic\")\n\n\nword_network = data.frame(word = rownames(cor_termW),\n                          centrality = degree(net),\n                          betweenness = betweenness(net),\n                          eigenvector = evcent(net))\n\n## 특정 키워드만 선택한 네트워크 맵 그리기 ##\nkeyword = c(\"정수기\",\"추천\",\"할인\")\nsub_cor_term = cor_termW[,keyword]\nsub_cor_term = sub_cor_term[!(rownames(sub_cor_term) %in% keyword),]\nsub_cor_term = sub_cor_term[rowSums(sub_cor_term)>0,]\n\nnet2 = network(sub_cor_term, directed = FALSE, matrix.type=\"bipartite\")\n\nggnet2(net2 # 네트워크 객체\n       ,label=TRUE # 노드에 라벨 표현 여부\n       ,label.size = 3 # 라벨 폰트 사이즈\n       ,edge.size = sub_cor_term[sub_cor_term>0] * 2\n       ,size = degree(net2) # 노드의 크기를 degree cetrality값에 따라 다르게 하기\n       ,family=\"AppleGothic\")\n",
    "created" : 1497766287422.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1474957649",
    "id" : "8057E7BE",
    "lastKnownWriteTime" : 1497758050,
    "last_content_update" : 1497758050,
    "path" : "~/GitHub/RWork/FastCampus/keyword_analysis.R",
    "project_path" : "keyword_analysis.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}