install.packages("devtools")
library(devtools)
library(rword2vec)
version
library(devtools)
update.packages()
library(devtools)
install.packages("devtools")
library(devtools)
library(rword2vec)
install_github("mukul13/rword2vec")
library(rword2vec)
ls("package:rword2vec")
model=word2vec(train_file = "/Users/kimnamyoun/GitHub/tmcn/pkg/tmcn.word2vec/inst/examples/smartphone.txt",output_file = "vec2.bin",binary=1)
model
dist=distance(file_name = "vec2.bin",search_word = "노무현",num = 20)
dist
ana=word_analogy(file_name = "vec.bin",search_words = "노무현 다른",num = 20)
ana=word_analogy(file_name = "vec2.bin",search_words = "노무현 다른",num = 20)
ana
ana=word_analogy(file_name = "vec2.bin",search_words = "노무현 많은",num = 20)
ana=word_analogy(file_name = "vec2.bin",search_words = "노무현 많은 때문에",num = 20)
ana
ana=word_analogy(file_name = "vec2.bin",search_words = "노무현 많은 -때문에",num = 20)
ana
ana=word_analogy(file_name = "vec2.bin",search_words = "노무현 많은 때문에",num = 20)
ana
model2=word2vec(train_file = "./out.txt",output_file = "./vecNoun.bin",binary=2)
library(devtools)
library(rword2vec)
ls("package:rword2vec")
library(KoNLP)
model2=word2vec(train_file = "./out.txt",output_file = "./vecNoun.bin",binary=2)
distance(file_name = "./vecNoun.bin", search_word = "국민",num = 30)
distance(file_name = "./vecNoun.bin", search_word = "기술",num = 30)
distance(file_name = "./vecNoun.bin", search_word = "기술",num = 15)
distance(file_name = "./vecNoun.bin", search_word = "젊은이",num = 15)
distance(file_name = "./vecNoun.bin", search_word = "금리",num = 15)
distance(file_name = "./vecNoun.bin", search_word = "취업",num = 15)
distance(file_name = "./vecNoun.bin", search_word = "청년",num = 15)
distance(file_name = "./vecNoun.bin", search_word = "경제",num = 15)
distance(file_name = "./vecNoun.bin", search_word = "창조",num = 15)
distance(file_name = "./vecNoun.bin", search_word = "대한민국",num = 15)
distance(file_name = "./vecNoun.bin", search_word = "대학생",num = 15)
distance(file_name = "./vecNoun.bin", search_word = "젊은이",num = 15)
distance(file_name = "./vecNoun.bin", search_word = "어려움",num = 15)
distance(file_name = "./vecNoun.bin", search_word = "노조",num = 15)
distance(file_name = "./vecNoun.bin", search_word = "일자리",num = 15)
word_analogy(file_name = "./vecNoun.bin", search_words = "일자리 취업 청년",num = 10)
word_analogy(file_name = "./vecNoun.bin", search_words = "젊은이 취업 청년",num = 10)
word_analogy(file_name = "./vecNoun.bin", search_words = "젊은이 취업 젊은이",num = 10)
library(Rtsne)
bin_to_txt("./vecNoun.bin","./vectorNoun.txt")
vectorNoun = read.table("./vectorNoun.txt",skip=1, fill = TRUE)
rtsne_out <- Rtsne(as.matrix(vectorNoun[1:219,2:101]))
rtsne_out <- Rtsne(as.matrix(vectorNoun[1:209,2:101]))
plot(rtsne_out$Y, t='n', main="BarnesHutSNE")
text(rtsne_out$Y, labels=vectorNoun[,1], family="AppleGothic")
parsedData =read.csv("/Users/kimnamyoun/develop/build/TextConvert4TM/output/out.csv",
stringsAsFactors = FALSE, header = FALSE, encoding = "UTF-8")
colnames(parsedData) = c("id","pContent")
dtm<-DocumentTermMatrix(corp, control=list(removeNumbers=TRUE, wordLengths=c(2,Inf)))
library(tm)
corp<-Corpus(DataframeSource(parsedData))
corp <- tm_map(corp, removePunctuation)
corp <- tm_map(corp, removeNumbers)
dtm<-DocumentTermMatrix(corp, control=list(removeNumbers=TRUE, wordLengths=c(2,Inf)))
dtm
freq = colSums(as.matrix(dtm))
parsedData =read.csv("/Users/kimnamyoun/develop/build/TextConvert4TM/output/out.csv",
stringsAsFactors = FALSE, header = FALSE, encoding = "UTF-8")
colnames(parsedData) = c("id","pContent")
library(tm)
corp<-Corpus(DataframeSource(parsedData))
corp <- tm_map(corp, removePunctuation)
for (j in seq(docs))
{
docs[[j]] <- gsub("nike", "나이키", docs[[j]])
docs[[j]] <- gsub("현대자동차", "현대차", docs[[j]])
docs[[j]] <- gsub("엘쥐전자", "엘지전자", docs[[j]])
docs[[j]] <- gsub("칼퇴", "칼퇴근", docs[[j]])
}
for (j in seq(corp))
{
docs[[j]] <- gsub("nike", "나이키", docs[[j]])
docs[[j]] <- gsub("현대자동차", "현대차", docs[[j]])
docs[[j]] <- gsub("엘쥐전자", "엘지전자", docs[[j]])
docs[[j]] <- gsub("칼퇴", "칼퇴근", docs[[j]])
}
for (j in seq(corp))
{
corp[[j]] <- gsub("nike", "나이키", corp[[j]])
corp[[j]] <- gsub("현대자동차", "현대차", corp[[j]])
corp[[j]] <- gsub("엘쥐전자", "엘지전자", corp[[j]])
corp[[j]] <- gsub("칼퇴", "칼퇴근", corp[[j]])
}
freq = colSums(as.matrix(dtm))
dtm<-DocumentTermMatrix(corp, control=list(removeNumbers=TRUE, wordLengths=c(2,Inf)))
corp<-Corpus(DataframeSource(parsedData))
dtm<-DocumentTermMatrix(corp, control=list(removeNumbers=TRUE, wordLengths=c(2,Inf)))
corp <- tm_map(corp, removeNumbers)
corp <- tm_map(corp, removeWords, c("블로그", "품질"))
dtm<-DocumentTermMatrix(corp, control=list(removeNumbers=TRUE, wordLengths=c(2,Inf)))
for (j in seq(corp))
{
corp[[j]] <- gsub("nike", "나이키", corp[[j]])
corp[[j]] <- gsub("현대자동차", "현대차", corp[[j]])
corp[[j]] <- gsub("엘쥐전자", "엘지전자", corp[[j]])
corp[[j]] <- gsub("칼퇴", "칼퇴근", corp[[j]])
}
dtm<-DocumentTermMatrix(corp, control=list(removeNumbers=TRUE, wordLengths=c(2,Inf)))
corp <- tm_map(corp, PlainTextDocument)
dtm<-DocumentTermMatrix(corp, control=list(removeNumbers=TRUE, wordLengths=c(2,Inf)))
freq = colSums(as.matrix(dtm))
freq
dtm <- removeSparseTerms(dtm, as.numeric(0.97))
freq = colSums(as.matrix(dtm))
freq
order(freq)
length(freq)
freq[head(order(freq))]
freq[tail(order(freq))]
freq[head(order(freq))]
freq[tail(order(freq), 10)]
freq[head(order(freq),10)]
library(dplyr)
arrange(freq)
freq[tail(order(freq), 10)]
findFreqTerms(dtm, lowfreq = 10)
freq[head(order(freq),10)]
findFreqTerms(dtm, lowfreq = 10, highfreq = 20)
findFreqTerms(dtm, lowfreq = 20, highfreq = 10)
findFreqTerms(dtm, lowfreq = 10)
findFreqTerms(dtm, lowfreq = 20)
findFreqTerms(dtm, lowfreq = 20, highfreq = 400)
freq[head(order(freq),10)]
findFreqTerms(dtm, lowfreq = 20, highfreq = 341)
library(ggplot2)
wordDf = data.frame(word=row.names(freq), freq=freq)
wordDf
freq
row.names(freq)
names(freq)
wordDf = data.frame(word=names(freq), freq=freq)
as.data.frame(freq)
ggplot(wordDf, aes(x=word, y=freq)) + geom_bar(stat = "identity")
arrange(wordDf)
View(wordDf)
arrange(wordDf, freq)
arrange(wordDf, -freq)
ggplot(head(wordDf,10), aes(x=word, y=freq)) + geom_bar(stat = "identity")
ggplot(head(wordDf,10), aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.title.x = element_text(family="AppleGothic"))
library(extrafont)
dtm <- removeSparseTerms(dtm, as.numeric(sparse))
ggplot(head(wordDf,10), aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.title.x = element_text(family="AppleGothic"))
loadfonts(device="postscript")
ggplot(head(wordDf,10), aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.title.x = element_text(family="AppleGothic"))
font_import()
font_import("AppleGothic")
loadfonts(device="postscript")
ggplot(head(wordDf,10), aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.title.x = element_text(family="AppleGothic"))
font_import("나눔고딕")
font_import()
loadfonts(device="postscript")
ggplot(head(wordDf,10), aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.title.x = element_text(family="AppleGothic"))
loadfonts(device="postscript")
ggplot(head(wordDf,10), aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.title.x = element_text(family="AppleGothic"))
ggplot(head(wordDf,10), aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.title.x = element_text(family="AppleGothic"))
ggplot(head(wordDf,10), aes(x=word, y=freq)) + geom_bar(stat = "identity")
display.brewer.all()
ggplot(head(wordDf,10), aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
ggplot(head(arrange(wordDf,freq),10), aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
head(arrange(wordDf,freq),10)
test=head(arrange(wordDf,freq),10)
ggplot(test, aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
test
wordDf[with(wordDf, order(freq)),]
ggplot(wordDf[with(wordDf, order(freq)),], aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
with(wordDf, order(freq))
test = wordDf[with(wordDf, order(freq)),]
head(test)
ggplot(test, aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
ggplot(head(test,20), aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
ggplot(head(test,20), aes(x=reorder(word,-freq), y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
ggplot(head(arrange(wordDf,freq),10), aes(x=reorder(word,-freq), y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
ggplot(head(arrange(wordDf,freq),50), aes(x=reorder(word,-freq), y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
ggplot(head(arrange(wordDf,-freq),50), aes(x=reorder(word,-freq), y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
ggplot(head(arrange(wordDf,-freq),50), aes(x=reorder(word,-freq), y=freq)) + geom_bar() + theme(axis.text.x = element_text(family="AppleGothic"))
ggplot(head(arrange(wordDf,-freq),50), aes(x=reorder(word,-freq), y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
ggplot(head(arrange(wordDf,-freq),50), aes(x=reorder(word,-freq), y=freq)) + geom_bar(stat = "count") + theme(axis.text.x = element_text(family="AppleGothic"))
ggplot(head(arrange(wordDf,-freq),50), aes(x=reorder(word,-freq), y=freq)) + geom_bar(stat = "stack") + theme(axis.text.x = element_text(family="AppleGothic"))
parsedData =read.csv("/Users/kimnamyoun/develop/workspace/TextConvert4TM/output/out_그랜저HG_동호회카페_9.csv",
stringsAsFactors = FALSE, header = FALSE, encoding = "UTF-8")
colnames(parsedData) = c("id","pContent")
View(parsedData)
corp<-Corpus(DataframeSource(parsedData))
parsedData =read.csv("/Users/kimnamyoun/develop/workspace/TextConvert4TM/output/out_그랜저HG_동호회카페_9.csv",
stringsAsFactors = FALSE, header = FALSE, encoding = "UTF-8")
colnames(parsedData) = c("id","pContent")
corp<-Corpus(DataframeSource(parsedData))
corp <- tm_map(corp, removePunctuation)
corp <- tm_map(corp, PlainTextDocument)
dtm<-DocumentTermMatrix(corp, control=list(removeNumbers=TRUE, wordLengths=c(2,Inf)))
dtm <- removeSparseTerms(dtm, as.numeric(0.97))
freq = colSums(as.matrix(dtm))
length(freq)
dtm<-DocumentTermMatrix(corp, control=list(removeNumbers=TRUE, wordLengths=c(2,Inf)))
dtm <- removeSparseTerms(dtm, as.numeric(0.98))
freq = colSums(as.matrix(dtm))
length(freq)
freq[tail(order(freq), 10)]
freq[head(order(freq),10)]
wordDf = data.frame(word=names(freq), freq=freq)
library(ggplot2)
ggplot(wordDf, aes(x=word, y=freq)) + geom_bar(stat = "identity")
ggplot(head(wordDf,10), aes(x=word, y=freq))
+ geom_bar(stat = "identity")
+ theme(axis.text.x = element_text(family="AppleGothic"))
library(ggplot2)
ggplot(head(wordDf,10), aes(x=word, y=freq))
+ geom_bar(stat = "identity")
ggplot(head(wordDf,10), aes(x=word, y=freq))
+ geom_bar(stat = "identity")
ggplot(head(wordDf,10), aes(x=word, y=freq)) + geom_bar(stat = "identity")
ggplot(head(wordDf,10), aes(x=word, y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
ggplot(head(arrange(wordDf,-freq),50), aes(x=reorder(word,-freq), y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
ggplot(head(arrange(wordDf,-freq),25), aes(x=reorder(word,-freq), y=freq)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(family="AppleGothic"))
library(KoNLP)
extractNoun(parsedData$pContent)
extractNoun(parsedData$pContent[1])
View(parsedData)
parsedData$pContent[1]
SimplePos09(parsedData$pContent[1])
