{
    "collab_server" : "",
    "contents" : "# server.R\n\nlibrary(shiny)\nlibrary(googleVis)\nlibrary(reshape)\nlibrary(wordcloud)\n\nshinyServer(function(input, output) {\n  \n  sliderValue1_1 <- reactive({\n    \n    # Chart 1 - Social Buzz & Sales Matrix\n    \n    dt <- read.csv('View_6_output.csv', header = TRUE)\n\n    if(input$product1 == 'all' && input$sentiment1 =='all'){\n      \n      sub <- subset(dt, week_num == paste('2015/',input$week1, sep=\"\"), select = c(c_name_eng, total_count, quantity))\n      sub <- cbind(as.character(sub[,1]), scale(sub[,-1]))\n      colnames(sub) <- c(\"c_name_eng\", \"Social\", \"Sales\")\n      sub <- data.frame(sub, stringsAsFactors = FALSE)\n      \n    } else if (input$product1 == 'all' && input$sentiment1 =='positive'){\n      \n      sub <- subset(dt, week_num == paste('2015/',input$week1, sep=\"\"), select = c(c_name_eng, pos_count, quantity))\n      sub <- cbind(as.character(sub[,1]), scale(sub[,-1]))\n      colnames(sub) <- c(\"c_name_eng\", \"Social\", \"Sales\")\n      sub <- data.frame(sub, stringsAsFactors = FALSE)\n\n    } else if (input$product1 == 'all' && input$sentiment1 =='negative'){\n      \n      sub <- subset(dt, week_num == paste('2015/',input$week1, sep=\"\"), select = c(c_name_eng, neg_count, quantity))\n      sub <- cbind(as.character(sub[,1]), scale(sub[,-1]))\n      colnames(sub) <- c(\"c_name_eng\", \"Social\", \"Sales\")\n      sub <- data.frame(sub, stringsAsFactors = FALSE)\n      \n    } else if (input$product1 == 'drum' && input$sentiment1 =='all'){\n      \n      sub <- subset(dt, week_num == paste('2015/',input$week1, sep=\"\"), select = c(c_name_eng, t_DRUM_count, DRUM_Q))\n      sub <- cbind(as.character(sub[,1]), scale(sub[,-1]))\n      colnames(sub) <- c(\"c_name_eng\", \"Social\", \"Sales\")\n      sub <- data.frame(sub, stringsAsFactors = FALSE)\n      \n    } else if (input$product1 == 'drum' && input$sentiment1 =='positive'){\n      \n      sub <- subset(dt, week_num == paste('2015/',input$week1, sep=\"\"), select = c(c_name_eng, p_DRUM_count, DRUM_Q))\n      sub <- cbind(as.character(sub[,1]), scale(sub[,-1]))\n      colnames(sub) <- c(\"c_name_eng\", \"Social\", \"Sales\")\n      sub <- data.frame(sub, stringsAsFactors = FALSE)\n      \n    } else if (input$product1 == 'drum' && input$sentiment1 =='negative'){\n      \n      sub <- subset(dt, week_num == paste('2015/',input$week1, sep=\"\"), select = c(c_name_eng, n_DRUM_count, DRUM_Q))\n      sub <- cbind(as.character(sub[,1]), scale(sub[,-1]))\n      colnames(sub) <- c(\"c_name_eng\", \"Social\", \"Sales\")\n      sub <- data.frame(sub, stringsAsFactors = FALSE)\n      \n    } else if (input$product1 == 'bolun' && input$sentiment1 =='all'){\n      \n      sub <- subset(dt, week_num == paste('2015/',input$week1, sep=\"\"), select = c(c_name_eng, t_BOLUN_count, BOLUN_Q))\n      sub <- cbind(as.character(sub[,1]), scale(sub[,-1]))\n      colnames(sub) <- c(\"c_name_eng\", \"Social\", \"Sales\")\n      sub <- data.frame(sub, stringsAsFactors = FALSE)\n      \n    } else if (input$product1 == 'bolun' && input$sentiment1 =='positive'){\n      \n      sub <- subset(dt, week_num == paste('2015/',input$week1, sep=\"\"), select = c(c_name_eng, p_BOLUN_count, BOLUN_Q))\n      sub <- cbind(as.character(sub[,1]), scale(sub[,-1]))\n      colnames(sub) <- c(\"c_name_eng\", \"Social\", \"Sales\")\n\n    } else if (input$product1 == 'bolun' && input$sentiment1 =='negative'){\n      \n      sub <- subset(dt, week_num == paste('2015/',input$week1, sep=\"\"), select = c(c_name_eng, n_BOLUN_count, BOLUN_Q))\n      sub <- cbind(as.character(sub[,1]), scale(sub[,-1]))\n      colnames(sub) <- c(\"c_name_eng\", \"Social\", \"Sales\")\n      sub <- data.frame(sub, stringsAsFactors = FALSE)\n      \n    }\n    \n  }) \n  \n  sliderValue1_2 <- reactive({\n    \n    # Chart 1 - Social Buzz & Sales Matrix\n    \n    dt2 <- read.csv('View_6_output_overall.csv', header = TRUE, stringsAsFactors = FALSE)\n    dt2 <- subset(dt2, sales_type == input$product1 & social_type == input$sentiment1, select = c(c_name_eng, social, sales))\n    print(dt2)\n    \n  })\n  \n  sliderValue2_1 <- reactive({\n    \n    # Chart 2 - Social Buzz & Sales Exploration\n    \n    dt <- read.csv('View_4_output.csv', header = TRUE, stringsAsFactors = FALSE)\n\n  })\n  \n  sliderValue2_2 <- reactive({\n    \n    # Chart 2 - Social Buzz & Sales Exploration\n    \n    dt <- read.csv('promotion_cal.csv', header = TRUE, stringsAsFactors = FALSE)\n    \n  })\n  \n  sliderValue3_1 <- reactive({\n    \n    # Chart 3 - Social Analysis\n    \n    dt <- read.csv('View_8.csv', header = TRUE)\n    \n    dtlist <- vector(\"list\", 2)\n    subweekdt <- subset(dt, weeknum == paste('2015/',input$week3, sep=\"\"))\n    \n    productName <- toString(input$product3)\n    companyName <- toString(input$company3)\n    \n    if(productName==\"all\" && companyName==\"all\"){\n      \n      dtlist[[1]] <- aggregate(subweekdt$count, by = list(subweekdt$product, subweekdt$neg_pos), sum)\n      colnames(dtlist[[1]]) <- c(\"product\", \"neg_pos\", \"count\")\n      \n      dtlist[[2]] <- cast(subweekdt, media_name + product ~ neg_pos, sum)\n      \n    } else if(productName==\"all\" && companyName!=\"all\"){\n      \n      subCompany <- subset(subweekdt, company == companyName)\n      dtlist[[1]] <- aggregate(subCompany$count, by = list(subCompany$product, subCompany$neg_pos), sum)\n      colnames(dtlist[[1]]) <- c(\"product\", \"neg_pos\", \"count\")\n      \n      dtlist[[2]] <- cast(subCompany, media_name + product ~ neg_pos, sum)\n      \n    } else if(productName!=\"all\" && companyName==\"all\"){\n      \n      print(productName)\n      subProduct <- subset(subweekdt, product == productName)\n      dtlist[[1]] <- aggregate(subProduct$count, by = list(subProduct$product, subProduct$neg_pos), sum)\n      colnames(dtlist[[1]]) <- c(\"product\", \"neg_pos\", \"count\")\n      \n      dtlist[[2]] <- cast(subProduct, media_name + product ~ neg_pos, sum)\n      \n    } else if(productName!=\"all\" && companyName!=\"all\"){\n      \n      subTwo <- subset(subweekdt, product == productName)\n      subTwo <- subset(subTwo, company == companyName)\n      \n      dtlist[[1]] <- aggregate(subTwo$count, by = list(subTwo$product, subTwo$neg_pos), sum)\n      colnames(dtlist[[1]]) <- c(\"product\", \"neg_pos\", \"count\")\n      \n      dtlist[[2]] <- cast(subTwo, media_name + product ~ neg_pos, sum)\n      \n    }\n    dtlist[[3]] <- productName\n    dtlist[[4]] <- companyName\n    print(\"+++++\")\n    print(dtlist)\n\n  })\n  \n  sliderValue3_2 <- reactive({\n    keywordset <- read.csv('keyword_summary_Total_v2_1_sampling.csv', header = TRUE)\n    colnames(keywordset) <- c(\"week_num\", \"product\", \"neg_pos\", \"keyword\", \"role\", \"numkeyworkd\", \"numdocs\", \"company\")\n    \n    productName <- toString(input$product3)\n    companyName <- toString(input$company3)\n    \n    week_keywordset <- subset(keywordset, week_num == paste('2015/', input$week3, sep=\"\"), select = c(keyword,numdocs,neg_pos,company, product))\n    \n    if(productName==\"all\" && companyName==\"all\"){\n      \n      sub_keywordset <- aggregate(week_keywordset$numdocs, by=list(week_keywordset$keyword, week_keywordset$neg_pos),FUN=sum)\n      \n    }else if(productName==\"all\" && companyName!=\"all\"){\n      \n      print(companyName)\n      sub_keywordset <- subset(week_keywordset, company==companyName)\n      \n      if(nrow(sub_keywordset)>0){\n        sub_keywordset <- aggregate(sub_keywordset$numdocs, by=list(sub_keywordset$keyword, sub_keywordset$neg_pos),FUN=sum)\n      }\n      \n      \n    }else if(productName!=\"all\" && companyName==\"all\"){\n      \n      sub_keywordset <- subset(week_keywordset, product==productName)\n      sub_keywordset <- aggregate(sub_keywordset$numdocs, by=list(sub_keywordset$keyword, sub_keywordset$neg_pos),FUN=sum)\n      \n    }else if(productName!=\"all\" && companyName!=\"all\"){\n      \n      sub_keywordset <- subset(week_keywordset, product==productName)\n      sub_keywordset <- subset(sub_keywordset, company==companyName)\n      sub_keywordset <- aggregate(sub_keywordset$numdocs, by=list(sub_keywordset$keyword, sub_keywordset$neg_pos),FUN=sum)\n      \n    }\n   })\n  \n  sliderValue4 <- reactive({\n    \n    # Chart 4 - Sales Analysis \n    \n    dt <- read.csv('View_2_input2.csv', header = TRUE, stringsAsFactors = FALSE)\n    \n  })\n  \n  sliderValue5_1 <- reactive({\n    \n    dt <- read.csv('View_11_4c.csv', header = TRUE)\n    \n  })\n  \n  sliderValue5_2 <- reactive({\n    \n    dt <- read.csv('view_10_knowledge.csv', header = TRUE, stringsAsFactors = FALSE)\n    colnames(dt) <- c('No.', 'Week', 'Date', 'Company', 'Product', 'Social Sentiment', 'Channel', 'Buzz Quantity', '4C Level 1', '4C Level 2', 'Top 5 Keyword', 'Knowledge', 'Export Report')\n    print(dt)\n  })\n  \n  output$chart1 <- renderGvis({\n\n    # Chart 1\n    \n    dt1 <- sliderValue1_1()\n    dt1 <- dt1[order(dt1$c_name_eng),]\n    \n    dt2 <- sliderValue1_2()\n    dt2 <- dt2[order(dt2$c_name_eng),]\n    \n    gvisMerge(\n      gvisBubbleChart(dt1,\n                      idvar=\"c_name_eng\", \n                      xvar=\"Sales\", yvar=\"Social\",\n                      colorvar=\"c_name_eng\",\n                      options=list( width = 600\n                                    , height = 600\n                                    , hAxes=\"[{viewWindowMode:'explicit', viewWindow:{min:-3, max:3}, title:'Sales', textPosition: 'in'}]\"\n                                    , vAxes=\"[{viewWindowMode:'explicit', viewWindow:{min:-3, max:3}, title:'Social Buzz', textPosition: 'in'}]\"\n                                    , legend.position = 'top'\n                                    , title = paste(input$week1,\"  WEEK\")\n                                    , titleTextStyle=\"{color:'navy', fontSize:16}\"\n                                    , fontName = 'malgun'))\n      , gvisBubbleChart(dt2,\n                        idvar=\"c_name_eng\", \n                        xvar=\"sales\", yvar=\"social\",\n                        colorvar=\"c_name_eng\",\n                        options=list( width = 600\n                                      , height = 600\n                                      , hAxes=\"[{viewWindowMode:'explicit', viewWindow:{min:-3, max:3}, title:'Sales', textPosition: 'in'}]\"\n                                      , vAxes=\"[{viewWindowMode:'explicit', viewWindow:{min:-3, max:3}, title:'Social Buzz', textPosition: 'in'}]\"\n                                      , legend.position = 'top'\n                                      , title = \"3Q\"\n                                      , titleTextStyle=\"{color:'navy', fontSize:16}\"\n                                      , fontName = 'malgun'\n                                      )\n                         )\n      , horizontal = TRUE)\n  })\n  \n  output$chart2 <- renderGvis({\n    \n    # Chart 2\n    \n    dt <- sliderValue2_1()\n    \n    dt$date <- as.Date(dt$date)\n    \n    gvisMotionChart(dt, idvar = \"id\", timevar = \"date\",\n                    xvar=\"x1\", yvar=\"x2\", sizevar=\"quantity\",\n                    option = list(width = 800, height = 620))\n  })\n  \n  output$chart3 <- renderGvis({\n    \n    # Chart 3 - Social Analysis\n    \n    dt <- sliderValue3_1()\n\n    print(dt)\n    \n    dt1 <- aggregate(dt[[1]][,'count'], by = list(dt[[1]]$neg_pos), sum)\n    dt2 <- aggregate(dt[[2]][,c('neg', 'pos')], by = list(dt[[2]]$media_name), sum)\n    dt2 <- dt2[, c(\"Group.1\", \"pos\", \"neg\")]\n    \n    gvisMerge(\n      gvisPieChart(dt1\n                   , options=list(height = 450\n                                  , width = 600\n                                  , title = toupper(dt[[3]])\n                                  , titleTextStyle=\"{color:'navy', fontSize:16}\"\n                                  , fontName = 'malgun')\n      ),\n      gvisBarChart(dt2\n                   , xvar = \"Group.1\"\n                   , yvar = c(\"neg\", \"pos\")\n                   , options = list(height = 450\n                                    , width = 600\n                                    , title = \"Buzz Count by Source\")\n      ),\n      horizontal = TRUE\n    )\n  })\n  \n  output$chart4 <- renderGvis({\n    \n    # Chart 4 - Sales Analysis \n    \n    dt <- sliderValue4()\n    dt$date <- as.Date(dt$date)\n    \n    print(head(dt))\n    \n    if ( input$company4 == \"all\" ){\n      \n      set <- aggregate(dt[,-c(1:3,ncol(dt))], by = list(dt$c_name_eng, dt$week_num), mean)\n      colnames(set)[1:2] <- c('c_name_eng', 'week_num')\n      \n      subset <- subset(set, week_num == input$week4)\n      \n      cset <- subset[, c('c_name_eng'\n                     , 'online_quantity'\n                     , 'offline_quantity')]\n      \n      cset$sum  <- rowSums(cset[,c(2,3)], na.rm = TRUE)\n      cset$avg_online <- mean(cset$online_quantity, na.rm = TRUE)\n      cset$avg_offline <- mean(cset$offline_quantity, na.rm = TRUE)\n      colnames(cset) <- c('COMPANY', 'ONLINE', 'OFFLINE', 'SUM', 'AVG.ONLINE', 'AVG.OFFLINE')\n      \n      tset <- subset[, c('c_name_eng'\n                     , 'single'\n                     , 'dual'\n                     , 'cylinder'\n                     , 'drum')]\n      \n      tset$sum  <- rowSums(tset[,c(2:5)], na.rm = TRUE)\n      tset[,c(2:5)] <- tset[,c(2:5)]/tset$sum\n      tset$avg_single <- mean(tset$single, na.rm = TRUE)\n      tset$avg_dual <- mean(tset$dual, na.rm = TRUE)\n      tset$avg_cylinder <- mean(tset$cylinder, na.rm = TRUE)\n      tset$avg_drum <- mean(tset$drum, na.rm = TRUE)\n      colnames(tset) <- c('COMPANY', 'SINGLE', 'DUAL', 'BOLUN', 'DRUM', 'SUM', 'AVG.SINGLE', 'AVG.DOUBLE', 'AVG.BOLUN', 'AVG.DRUM')\n      \n      pset <- subset[, c('c_name_eng'\n                      , 'price_under_200'\n                      , 'price_under_400'\n                      , 'price_under_600'\n                      , 'price_under_800'\n                      , 'price_under_1000'\n                      , 'price_under_1200'\n                      , 'price_under_1400'\n                      , 'price_under_1900'\n                      , 'price_under_2400'\n                      , 'price_under_2900'\n                      , 'price_under_3400'\n                      , 'price_under_4400'\n                      , 'price_over_4401')]\n      \n      pset$sum  <- rowSums(pset[,c(2:14)], na.rm = TRUE)\n      pset[,c(2:14)] <- pset[,c(2:14)]/pset$sum\n      colnames(pset) <- c('COMPANY', '200-', '400-', '600-', '800-', '1000-', '1200-', '1400-', '1900-', '2400-', '2900-', '3400-', '4400-', '4400+', 'SUM')\n      \n      vset <- subset[, c('c_name_eng'\n                    , 'vol_under_4.4'\n                    , 'vol_under_4.9'\n                    , 'vol_under_5.9'\n                    , 'vol_under_6.4'\n                    , 'vol_under_6.9'\n                    , 'vol_under_7.4'\n                    , 'vol_under_7.9'\n                    , 'vol_over_8.0')]\n      \n      vset$sum  <- rowSums(vset[,c(2:9)], na.rm = TRUE)\n      vset[,c(2:9)] <- vset[,c(2:9)]/vset$sum\n      colnames(vset) <- c('COMPANY', '4.4-', '4.9-', '5.9-', '6.4-', '6.9-', '7.4-','7.9-', '8.0+', 'SUM')\n\n      gvisMerge(gvisMerge(gvisColumnChart(cset\n                                       , xvar = \"COMPANY\"\n                                       , yvar = c('ONLINE', 'OFFLINE', 'AVG.ONLINE', 'AVG.OFFLINE')\n                                       , options=list(height = 400, width = 700\n                                                       , title = \"ONLINE/OFFLINE SALES VOLUME\"\n                                                       , titleTextStyle=\"{color:'navy', fontSize:16}\"\n                                                       , fontName = 'malgun'\n                                                       , vAxes =\"[{title:'Quantity', titleTextStyle: {color: 'black'}, textStyle:{color: 'black'}, textPosition: 'out'}]\"\n                                                       , hAxes = \"[{title: 'Date', textPosition: 'out'}]\"\n                                                       , series=\"{ 2: {type: 'line', lineDashStyle: [20, 1]}, 3: {type: 'line', lineDashStyle: [4, 1]} }\"))\n                          , gvisColumnChart(tset\n                                         , xvar = \"COMPANY\"\n                                         , yvar = c('SINGLE', 'DUAL', 'BOLUN', 'DRUM', 'AVG.SINGLE', 'AVG.DOUBLE', 'AVG.BOLUN', 'AVG.DRUM')\n                                         , options=list(height = 400, width = 700\n                                                          , title = \"ONLINE SALES VOLUME RATIO BY TYPE\"\n                                                          , titleTextStyle=\"{color:'navy', fontSize:16}\"\n                                                          , fontName = 'malgun'\n                                                          , vAxes =\"[{title:'Ratio', format:'#,###%', titleTextStyle: {color: 'black'}, textStyle:{color: 'black'}, textPosition: 'out'}]\"\n                                                          , hAxes = \"[{title: 'Date', textPosition: 'out'}]\"\n                                                          , seriesType = \"bars\"\n                                                          , series=\"{ 4: {type: 'line', lineDashStyle: [4, 1]}, 5: {type: 'line', lineDashStyle: [4, 1]}\n                                                          , 6: {type: 'line', lineDashStyle: [4, 1]}, 7: {type: 'line', lineDashStyle: [4, 1]}}\"))\n                          , horizontal = TRUE)\n                \n                , gvisMerge(gvisColumnChart(pset\n                                            , xvar = \"COMPANY\"\n                                            , yvar = c('200-', '400-', '600-', '800-', '1000-', '1200-', '1400-', '1900-', '2400-', '2900-', '3400-', '4400-', '4400+')\n                                            , options=list(height = 400, width = 700\n                                                           , title = \"ONLINE SALES VOLUME RATIO BY PRICE\"\n                                                           , titleTextStyle = \"{color:'navy', fontSize:16}\"\n                                                           , fontName = 'malgun'\n                                                           , vAxes =\"[{title:'Ratio', format:'#,###%', titleTextStyle: {color: 'black'}, textStyle:{color: 'black'}, textPosition: 'out'}]\"\n                                                           , hAxes = \"[{title: 'Date', textPosition: 'out'}]\"))\n                            , gvisColumnChart(vset\n                                              , xvar = \"COMPANY\"\n                                              , yvar = c('4.4-', '4.9-', '5.9-', '6.4-', '6.9-', '7.4-','7.9-', '8.0+')\n                                              , options=list(height = 400, width = 700\n                                                             , title = \"ONLINE SALES VOLUME RATIO BY VOLUME\"\n                                                             , titleTextStyle = \"{color:'navy', fontSize:16}\"\n                                                             , fontName = 'malgun'\n                                                             , vAxes =\"[{title:'Ratio', format:'#,###%', titleTextStyle: {color: 'black'}, textStyle:{color: 'black'}, textPosition: 'out'}]\"\n                                                             , hAxes = \"[{title: 'Date', textPosition: 'out'}]\"))\n                            , horizontal = TRUE))\n      \n    } else {\n      \n      subset_company <- subset(dt, c_name_eng == input$company4)\n      nrows <- nrow(subset_company)\n      \n      cset <- subset_company[seq(nrows-(input$n_week4-1), nrows, 1),c('c_name_eng'\n                                                                      , 'online_quantity'\n                                                                      , 'offline_quantity'\n                                                                      , 'date')]\n      cset$sum  <- rowSums(cset[,c(2,3)], na.rm = TRUE)\n      cset$avg_online <- mean(cset$online_quantity)\n      cset$avg_offnline <- mean(cset$offline_quantity)\n      colnames(cset) <- c('COMPANY', 'ONLINE', 'OFFLINE', 'DATE', 'SUM', 'AVG.ONLINE', 'AVG.OFFLINE')\n      \n      tset <- subset_company[seq(nrows-(input$n_week4-1), nrows, 1),c('c_name_eng'\n                                                                     , 'single'\n                                                                     , 'dual'\n                                                                     , 'cylinder'\n                                                                     , 'drum'\n                                                                     , 'date')]\n      tset$sum  <- rowSums(tset[,c(2:5)], na.rm = TRUE)\n      tset[,c(2:5)] <- tset[,c(2:5)]/tset$sum\n      tset$avg_single <- mean(tset$single)\n      tset$avg_dual <- mean(tset$dual)\n      tset$avg_cylinder <- mean(tset$cylinder)\n      tset$avg_drum <- mean(tset$drum)\n      colnames(tset) <- c('COMPANY', 'SINGLE', 'DUAL', 'BOLUN', 'DRUM', 'DATE', 'SUM', 'AVG.SINGLE', 'AVG.DOUBLE', 'AVG.BOLUN', 'AVG.DRUM')\n      \n      pset <- subset_company[seq(nrows-(input$n_week4-1), nrows, 1),c('c_name_eng'\n                                                                      , 'price_under_200'\n                                                                      , 'price_under_400'\n                                                                      , 'price_under_600'\n                                                                      , 'price_under_800'\n                                                                      , 'price_under_1000'\n                                                                      , 'price_under_1200'\n                                                                      , 'price_under_1400'\n                                                                      , 'price_under_1900'\n                                                                      , 'price_under_2400'\n                                                                      , 'price_under_2900'\n                                                                      , 'price_under_3400'\n                                                                      , 'price_under_4400'\n                                                                      , 'price_over_4401'\n                                                                      , 'date')]\n      pset$sum  <- rowSums(pset[,c(2:14)], na.rm = TRUE)\n      pset[,c(2:14)] <- pset[,c(2:14)]/pset$sum\n      colnames(pset) <- c('COMPANY', '200-', '400-', '600-', '800-', '1000-', '1200-', '1400-', '1900-', '2400-', '2900-', '3400-', '4400-', '4400+', 'DATE', 'SUM')\n      \n      vset <- subset_company[seq(nrows-(input$n_week4 -1), nrows, 1),c('c_name_eng'\n                                                                      , 'vol_under_4.4'\n                                                                      , 'vol_under_4.9'\n                                                                      , 'vol_under_5.9'\n                                                                      , 'vol_under_6.4'\n                                                                      , 'vol_under_6.9'\n                                                                      , 'vol_under_7.4'\n                                                                      , 'vol_under_7.9'\n                                                                      , 'vol_over_8.0'\n                                                                      , 'date')]\n      vset$sum  <- rowSums(vset[,c(2:9)], na.rm = TRUE)\n      vset[,c(2:9)] <- vset[,c(2:9)]/vset$sum\n      colnames(vset) <- c('COMPANY', '4.4-', '4.9-', '5.9-', '6.4-', '6.9-', '7.4-','7.9-', '8.0+', 'DATE', 'SUM')\n\n      gvisMerge(gvisMerge(gvisLineChart(cset\n                                        , xvar = \"DATE\"\n                                        , yvar = c('ONLINE', 'OFFLINE', 'AVG.ONLINE', 'AVG.OFFLINE')\n                                        , options=list(height = 400, width = 700\n                                                       , title = paste(toupper(input$company4), \" - ONLINE/OFFLINE SALES VOLUME\", sep =\"\")\n                                                       , titleTextStyle=\"{color:'navy', fontSize:16}\"\n                                                       , fontName = 'malgun'\n                                                       , vAxes =\"[{title:'Quantity', titleTextStyle: {color: 'black'}, textStyle:{color: 'black'}, textPosition: 'out'}]\"\n                                                       , hAxes = \"[{title: 'Date', textPosition: 'out'}]\"\n                                                       , series=\"{ 2: {lineDashStyle: [20, 1]}, 3: {lineDashStyle: [4, 1]} }\"))\n                          , gvisComboChart(tset\n                                           , xvar = \"DATE\"\n                                           , yvar = c('SINGLE', 'DUAL', 'BOLUN', 'DRUM', 'AVG.SINGLE', 'AVG.DOUBLE', 'AVG.BOLUN', 'AVG.DRUM')\n                                           , options=list(height = 400, width = 700\n                                                          , title = paste(toupper(input$company4), \" - ONLINE SALES VOLUME RATIO BY TYPE\", sep =\"\")\n                                                          , titleTextStyle=\"{color:'navy', fontSize:16}\"\n                                                          , fontName = 'malgun'\n                                                          , vAxes =\"[{title:'Ratio', format:'#,###%', titleTextStyle: {color: 'black'}, textStyle:{color: 'black'}, textPosition: 'out'}]\"\n                                                          , hAxes = \"[{title: 'Date', textPosition: 'out'}]\"\n                                                          , seriesType = \"bars\"\n                                                          , series=\"{ 4: {type: 'line', lineDashStyle: [4, 1]}, 5: {type: 'line', lineDashStyle: [4, 1]}\n                                                          , 6: {type: 'line', lineDashStyle: [4, 1]}, 7: {type: 'line', lineDashStyle: [4, 1]}}\"))\n                          , horizontal = TRUE)\n                \n                , gvisMerge(gvisColumnChart(pset\n                                            , xvar = \"DATE\"\n                                            , yvar = c('200-', '400-', '600-', '800-', '1000-', '1200-', '1400-', '1900-', '2400-', '2900-', '3400-', '4400-', '4400+')\n                                            , options=list(height = 400, width = 700\n                                                           , title = paste(toupper(input$company4), \" - ONLINE SALES VOLUME RATIO BY PRICE\", sep =\"\")\n                                                           , titleTextStyle = \"{color:'navy', fontSize:16}\"\n                                                           , fontName = 'malgun'\n                                                           , vAxes =\"[{title:'Ratio', format:'#,###%', titleTextStyle: {color: 'black'}, textStyle:{color: 'black'}, textPosition: 'out'}]\"\n                                                           , hAxes = \"[{title: 'Date', textPosition: 'out'}]\"))\n                            , gvisColumnChart(vset\n                                              , xvar = \"DATE\"\n                                              , yvar = c('4.4-', '4.9-', '5.9-', '6.4-', '6.9-', '7.4-','7.9-', '8.0+')\n                                              , options=list(height = 400, width = 700\n                                                             , title = paste(toupper(input$company4), \" - ONLINE SALES VOLUME RATIO BY VOLUME\", sep =\"\")\n                                                             , titleTextStyle = \"{color:'navy', fontSize:16}\"\n                                                             , fontName = 'malgun'\n                                                             , vAxes =\"[{title:'Ratio', format:'#,###%', titleTextStyle: {color: 'black'}, textStyle:{color: 'black'}, textPosition: 'out'}]\"\n                                                             , hAxes = \"[{title: 'Date', textPosition: 'out'}]\"))\n                            , horizontal = TRUE))\n      \n    }\n    \n  })\n  \n  output$chart5 <- renderGvis({\n    \n    dt <- sliderValue5_1()\n    dt1 <- subset(dt, val2 == TRUE)\n    \n    \n    gvisOrgChart(dt1, idvar = \"concept\", parentvar = \"parent\", tipvar = \"val\",\n                 options=list(width=600, height=250))\n    \n  })\n  \n  output$calendar <- renderDataTable({\n    \n    calendarDt <- sliderValue2_2()\n    \n    #gvisTable(calendarDt, options=list(page='enable', width=600, height='automatic', pageSize=20))\n    \n  })\n  \n  # Generate a summary of the dataset\n  output$intelligence <- renderPrint({\n    \n    cat(\"■ Haier의 긍정 Buzz량이 전체의 53%를 차지하고 있음. \\n■ Siemens의 부정 Buzz량은 타사 대비 15%로 높으며 판매량에 영향을 미칠 수 있는 수준임\")\n  })\n  \n  output$knowledge <- renderGvis({\n    \n    dt <- sliderValue5_2()\n    gvisTable(dt, options=list(page='enable'))\n    \n  })\n  \n  output$relationKeyword <- renderGvis({\n    dt2 <- sliderValue3_2()\n    df <- data.frame(word=dt2[,1], sentiment=dt2[,2], freq=dt2[,3], stringsAsFactors = FALSE)\n    \n    sub_pos <- subset(df, df$sentiment==\"pos\")\n    if(nrow(sub_pos) == 0){\n      temp = data.frame(word=\"NO Keyword\", freq=10)\n      posTotal=data.frame(word=\"Positive\", freq=sum(sub_pos$freq))\n      posTotal <- rbind(posTotal,temp)\n    }else{\n      posTotal=data.frame(word=\"Positive\", freq=sum(sub_pos$freq))\n    }\n    \n    sub_neg <- subset(df, df$sentiment==\"neg\")\n    if(nrow(sub_neg) == 0){\n      temp = data.frame(word=\"NO Keyword\", freq=10)\n      negTotal=data.frame(word=\"Negative\", freq=sum(sub_neg$freq))\n      negTotal <- rbind(negTotal,temp)\n    }else{\n      negTotal=data.frame(word=\"Negative\", freq=sum(sub_neg$freq))\n    }\n    \n    pos_df <- rbind(posTotal,subset(df, df$sentiment==\"pos\", select = c(\"word\",\"freq\")))\n    pos_df$parent <- \"Positive\"\n    pos_df$parent[pos_df$word==\"Positive\"] <- NA\n    pos_df$color <- log(pos_df$freq)\n    pos_df <- pos_df[with(pos_df,order(-freq)),]\n    pos_df <- head(pos_df,100)\n    \n    neg_df <- rbind(negTotal,subset(df, df$sentiment==\"neg\", select = c(\"word\",\"freq\")))\n    neg_df$parent <- \"Negative\"\n    neg_df$parent[neg_df$word==\"Negative\"] <- NA\n    neg_df$color <- log(neg_df$freq)\n    neg_df <- neg_df[with(neg_df,order(-freq)),]\n    neg_df <- head(neg_df,100)\n    \n    gvisMerge(\n      gvisMerge(\n        gvisTreeMap(pos_df, idvar = \"word\", parentvar=\"parent\", colorvar=\"freq\", sizevar = \"freq\",\n                    options=list(fontSize=16, highlightOnMouseOver=TRUE, maxColor=\"#F25E7A\", midColor=\"#F2B5C1\" ,minColor=\"#F2DDDE\", width=600)),\n        gvisTreeMap(neg_df, idvar = \"word\", parentvar=\"parent\", colorvar=\"color\", sizevar = \"freq\",\n                    options=list(fontSize=16, highlightOnMouseOver=TRUE, maxColor=\"#396F85\", midColor=\"#8AC0D7\" ,minColor=\"#9DAEB9\", width=600)),\n        horizontal = TRUE, \n        tableOptions= \"cellspacing=\\\"40\\\" bgcolor=\\\"#AABBCC\\\" left=\\\"100\\\" \" \n      ),\n      \n      gvisMerge(\n        gvisTable(pos_df, options=list(page=\"enable\", height=400, width=600)),\n        gvisTable(neg_df, options=list(page=\"enable\", height=400, width=600)),\n        horizontal = TRUE\n      )\n    )\n  })\n  \n})\n",
    "created" : 1482813121193.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1740438791",
    "id" : "D2D18824",
    "lastKnownWriteTime" : 1462507659,
    "last_content_update" : 1462507659,
    "path" : "~/GitHub/TextMining/Alibaba_Dashboard/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}