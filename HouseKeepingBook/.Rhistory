input_year = seq(2020, 2020, 1)
year_trend = accountBook %>%
group_by(yearMonth) %>%
summarise(t_income = sum(totalIncome)
,my_income = sum(ifelse(category2 %in% c('주수입_현아급여', '주수입_주원이') | detail == "퇴직금 찾음", 0, totalIncome))
,t_exp = sum(totalExpenditure)
,life_exp = sum(ifelse(category2 %in% except_life_category, 0, totalExpenditure))
,t_save = sum(totalIncome) - sum(totalExpenditure)) %>%
mutate(my_save = my_income - life_exp) %>% #나의 세이브 = 나의 수입 - 생활비 지출
arrange(yearMonth) %>%
mutate(t_cum_save = cumsum(t_save)) %>%
data.table()
year_trend$year = substr(year_trend$yearMonth, 1, 4)
year_trend$my_save_ratio = year_trend$my_save / year_trend$my_income
year_trend$t_save_ratio = year_trend$t_save / year_trend$t_income
year_trend = year_trend[year %in% input_year]
year_trend_melt = melt.data.table(year_trend, id.vars = 'yearMonth'
,measure.vars = c('t_exp','life_exp','t_income','my_income','t_save','t_cum_save','my_save_ratio','t_save_ratio')
,variable.name = 'trend_type'
,value.name = 'trend_value')
ggplot(year_trend_melt[trend_type %in% c('t_income','my_income','t_exp','life_exp','t_save')], aes(x = yearMonth, y = trend_value, group = trend_type, color = trend_type)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = point, breaks = seq(0, 50000000, 1000000)) +
labs(x = "년월", y = "금액") +
scale_color_startrek() +
theme(axis.text.x=element_text(size = 11, face = "bold", angle = 45, hjust = 1)
,axis.text.y=element_text(size = 11, face = "bold")
, plot.title = element_text(hjust = 0.5, face = "bold")
, title = element_text(hjust = 0.5, size = 12, face = "bold")
, legend.position = "top"
, legend.text = element_text(size = 12, face = "bold")
, text = element_text(family = "Kakao Regular"))
ggplot(year_trend_melt[trend_type %in% c('t_cum_save')], aes(x = yearMonth, y = trend_value/100000000, group = trend_type, color = trend_type)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = point, breaks = seq(0, 10, 0.1)) +
labs(x = "년월", y = "금액(억)") +
scale_color_startrek() +
theme(axis.text.x=element_text(size = 11, face = "bold", angle = 45, hjust = 1)
,axis.text.y=element_text(size = 11, face = "bold")
, plot.title = element_text(hjust = 0.5, face = "bold")
, title = element_text(hjust = 0.5, size = 12, face = "bold")
, legend.position = "top"
, axis.ticks.x = element_blank()
, legend.text = element_text(size = 12, face = "bold")
, panel.grid.major.x = element_blank()
, text = element_text(family = "Kakao Regular"))
ggplot(year_trend_melt[trend_type %in% c('t_save_ratio', 'my_save_ratio')], aes(x = yearMonth, y = trend_value, group = trend_type, color = trend_type)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = percent, breaks = extended_breaks(10)) +
geom_hline(yintercept = 0.5, colour = "blue") +
geom_hline(yintercept = 0, colour = "black") +
labs(x = "년월", y = "save_ratio") +
scale_color_startrek() +
theme(axis.text.x=element_text(size = 11, face = "bold", angle = 45, hjust = 1)
,axis.text.y=element_text(size = 11, face = "bold")
, plot.title = element_text(hjust = 0.5, face = "bold")
, title = element_text(hjust = 0.5, size = 12, face = "bold")
, legend.position = "top"
, axis.ticks.x = element_blank()
, legend.text = element_text(size = 12, face = "bold")
, text = element_text(family = "Kakao Regular"))
ggplot(year_trend_melt[trend_type %in% c('t_income','my_income','t_exp','life_exp','t_save')], aes(x = yearMonth, y = trend_value, group = trend_type, color = trend_type)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = point, breaks = seq(0, 50000000, 1000000)) +
labs(x = "년월", y = "금액") +
scale_color_startrek() +
theme(axis.text.x=element_text(size = 11, face = "bold", angle = 45, hjust = 1)
,axis.text.y=element_text(size = 11, face = "bold")
, plot.title = element_text(hjust = 0.5, face = "bold")
, title = element_text(hjust = 0.5, size = 12, face = "bold")
, legend.position = "top"
, legend.text = element_text(size = 12, face = "bold")
, text = element_text(family = "Kakao Regular"))
ggplot(year_trend_melt[trend_type %in% c('t_income','my_income','t_exp','life_exp','t_save')], aes(x = yearMonth, y = trend_value, group = trend_type, color = trend_type)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = point, breaks = seq(0, 50000000, 1000000)) +
labs(x = "년월", y = "금액") +
scale_color_startrek() +
theme(axis.text.x=element_text(size = 11, face = "bold", angle = 45, hjust = 1)
,axis.text.y=element_text(size = 11, face = "bold")
, plot.title = element_text(hjust = 0.5, face = "bold")
, title = element_text(hjust = 0.5, size = 12, face = "bold")
, legend.position = "top"
, legend.text = element_text(size = 12, face = "bold")
, text = element_text(family = "Kakao Regular"))
#2. 년도별 수입, 지출 현황 ==============================================================================================
input_year = seq(2020, 2020, 1)
year_trend = accountBook %>%
group_by(yearMonth) %>%
summarise(t_income = sum(totalIncome)
,my_income = sum(ifelse(category2 %in% c('주수입_현아급여', '주수입_주원이') | detail == "퇴직금 찾음", 0, totalIncome))
,t_exp = sum(totalExpenditure)
,life_exp = sum(ifelse(category2 %in% except_life_category, 0, totalExpenditure))
,t_save = sum(totalIncome) - sum(totalExpenditure)) %>%
mutate(my_save = my_income - life_exp) %>% #나의 세이브 = 나의 수입 - 생활비 지출
arrange(yearMonth) %>%
mutate(t_cum_save = cumsum(t_save)) %>%
data.table()
year_trend$year = substr(year_trend$yearMonth, 1, 4)
year_trend$my_save_ratio = year_trend$my_save / year_trend$my_income
year_trend$t_save_ratio = year_trend$t_save / year_trend$t_income
year_trend = year_trend[year %in% input_year]
year_trend_melt = melt.data.table(year_trend, id.vars = 'yearMonth'
,measure.vars = c('t_exp','life_exp','t_income','my_income','t_save','t_cum_save','my_save_ratio','t_save_ratio')
,variable.name = 'trend_type'
,value.name = 'trend_value')
ggplot(year_trend_melt[trend_type %in% c('t_income','my_income','t_exp','life_exp','t_save')], aes(x = yearMonth, y = trend_value, group = trend_type, color = trend_type)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = point, breaks = seq(0, 50000000, 1000000)) +
labs(x = "년월", y = "금액") +
scale_color_startrek() +
theme(axis.text.x=element_text(size = 11, face = "bold", angle = 45, hjust = 1)
,axis.text.y=element_text(size = 11, face = "bold")
, plot.title = element_text(hjust = 0.5, face = "bold")
, title = element_text(hjust = 0.5, size = 12, face = "bold")
, legend.position = "top"
, legend.text = element_text(size = 12, face = "bold")
, text = element_text(family = "Kakao Regular"))
source("../common_function.R")
ggthemr('fresh')
ggplot(year_trend_melt[trend_type %in% c('t_income','my_income','t_exp','life_exp','t_save')], aes(x = yearMonth, y = trend_value, group = trend_type, color = trend_type)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = point, breaks = seq(0, 50000000, 1000000)) +
labs(x = "년월", y = "금액") +
scale_color_startrek() +
theme(axis.text.x=element_text(size = 11, face = "bold", angle = 45, hjust = 1)
,axis.text.y=element_text(size = 11, face = "bold")
, plot.title = element_text(hjust = 0.5, face = "bold")
, title = element_text(hjust = 0.5, size = 12, face = "bold")
, legend.position = "top"
, legend.text = element_text(size = 12, face = "bold")
, text = element_text(family = "Kakao Regular"))
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
View(accountBook)
1018584+180874
96950 + 1107508
runApp('shiny_dashboard')
shiny::runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
View(scale_color_continuous)
accountBook
View(accountBook)
View(accountBook)
shiny::runApp('shiny_dashboard')
year_trend = accountBook %>%
group_by(yearMonth) %>%
summarise(t_income = sum(totalIncome)
,my_income = sum(ifelse(category2 %in% c('주수입_현아급여', '주수입_주원이') | detail == "퇴직금 찾음", 0, totalIncome))
,t_exp = sum(totalExpenditure)
,life_exp = sum(ifelse(category2 %in% except_life_category, 0, totalExpenditure))
,t_save = sum(totalIncome) - sum(totalExpenditure)) %>%
mutate(my_save = my_income - life_exp) %>% #나의 세이브 = 나의 수입 - 생활비 지출
arrange(yearMonth) %>%
mutate(t_cum_save = cumsum(t_save)) %>%
data.table()
year_trend$year = substr(year_trend$yearMonth, 1, 4)
year_trend$my_save_ratio = year_trend$my_save / year_trend$my_income
year_trend$t_save_ratio = year_trend$t_save / year_trend$t_income
year_trend = year_trend[year %in% input_year]
year_trend_melt = melt.data.table(year_trend, id.vars = 'yearMonth'
,measure.vars = c('t_exp','life_exp','t_income','my_income','t_save','t_cum_save','my_save_ratio','t_save_ratio')
,variable.name = 'trend_type'
,value.name = 'trend_value')
View(year_trend_melt)
#2. 년도별 수입, 지출 현황 ==============================================================================================
input_year = seq(2010, 2011, 1)
year_trend = accountBook %>%
group_by(yearMonth) %>%
summarise(t_income = sum(totalIncome)
,my_income = sum(ifelse(category2 %in% c('주수입_현아급여', '주수입_주원이') | detail == "퇴직금 찾음", 0, totalIncome))
,t_exp = sum(totalExpenditure)
,life_exp = sum(ifelse(category2 %in% except_life_category, 0, totalExpenditure))
,t_save = sum(totalIncome) - sum(totalExpenditure)) %>%
mutate(my_save = my_income - life_exp) %>% #나의 세이브 = 나의 수입 - 생활비 지출
arrange(yearMonth) %>%
mutate(t_cum_save = cumsum(t_save)) %>%
data.table()
year_trend$year = substr(year_trend$yearMonth, 1, 4)
year_trend$my_save_ratio = year_trend$my_save / year_trend$my_income
year_trend$t_save_ratio = year_trend$t_save / year_trend$t_income
year_trend = year_trend[year %in% input_year]
year_trend_melt = melt.data.table(year_trend, id.vars = 'yearMonth'
,measure.vars = c('t_exp','life_exp','t_income','my_income','t_save','t_cum_save','my_save_ratio','t_save_ratio')
,variable.name = 'trend_type'
,value.name = 'trend_value')
View(year_trend_melt)
View(year_trend)
View(accountBook)
#2. 년도별 수입, 지출 현황 ==============================================================================================
input_year = seq(2010, 2011, 1)
year_trend = accountBook %>%
group_by(yearMonth) %>%
summarise(t_income = sum(totalIncome)
,my_income = sum(ifelse(category2 %in% c("주수입_현아급여", "주수입_주원이") | detail == "퇴직금 찾음", 0, totalIncome))
,t_exp = sum(totalExpenditure)
,life_exp = sum(ifelse(category2 %in% except_life_category, 0, totalExpenditure))
,t_save = sum(totalIncome) - sum(totalExpenditure)) %>%
mutate(my_save = my_income - life_exp) %>% #나의 세이브 = 나의 수입 - 생활비 지출
arrange(yearMonth) %>%
mutate(t_cum_save = cumsum(t_save)) %>%
data.table()
View(year_trend)
rm(list=ls())
gc()
library(reshape2)
require(gdata)
require(stringi)
require(ggplot2)
require(dplyr)
require(reshape)
library(readxl)
#expenditureFileList = list.files("./dataFile/expenditure/")
#incomeFileList = list.files("./dataFile/income/")
expenditureFileList = list.files("~/Library/Mobile Documents/com~apple~CloudDocs/개인용/dataFile/expenditure/")
incomeFileList = list.files("~/Library/Mobile Documents/com~apple~CloudDocs/개인용/dataFile/income/")
data_dir_path = "~/Library/Mobile Documents/com~apple~CloudDocs/개인용/dataFile"
filePreProcessing <- function(expenditurFile, incomeFile){
expenditure = NULL
save = NULL
income = NULL
for(i in 1:length(expenditureFileList)){
expenditureTemp = read_xls(paste0(data_dir_path,"/expenditure/",expenditureFileList[i]), sheet = 1)
headName = t(expenditureTemp[3,])
headName = headName[,1]
expenditureTemp = expenditureTemp[4:(nrow(expenditureTemp)-4),]
colnames(expenditureTemp) = headName
colnames(expenditureTemp)[3] = "detail"
expenditureTemp$카드 = as.numeric(expenditureTemp$카드)
expenditureTemp$현금 = as.numeric(expenditureTemp$현금)
saveTemp = expenditureTemp %>% filter(grepl("저축/보험", 분류))
expenditureTemp = expenditureTemp %>% filter(!grepl("저축/보험", 분류))
expenditure = rbind(expenditure, expenditureTemp)
save = rbind(save, saveTemp)
}
for(i in 1:length(incomeFileList)){
incomeTemp = read_xls(paste0(data_dir_path,"/income/",incomeFileList[i]), sheet =  1)
headName = t(incomeTemp[3,])
headName = headName[,1]
incomeTemp = incomeTemp[4:(nrow(incomeTemp)-1),]
colnames(incomeTemp) = headName
incomeTemp$금액 = as.numeric(incomeTemp$금액)
colnames(incomeTemp)[2] = "detail"
income = rbind(income, incomeTemp)
}
#Data Processing - Expenditure
expenditure$날짜 = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7),"-",substr(expenditure$날짜,9,10))
expenditure$yearMonth = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7))
expenditure$year = stri_paste(substr(expenditure$날짜,1,4))
expenditure$totalExpend = as.numeric(expenditure$현금) + as.numeric(expenditure$카드)
expenditure$category1 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,1]
expenditure$category2 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,2]
credit_amount = expenditure %>% filter(category1 == "카드대금")
credit_amount = credit_amount %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalExpend)
colnames(credit_amount) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
expenditure = expenditure %>% filter(category1 != "카드대금")
expenditure = expenditure %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalExpend)
colnames(expenditure) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
expenditure$type = "expenditure"
#Data Processing - Save
save$날짜 = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7),"-",substr(save$날짜,9,10))
save$yearMonth = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7))
save$year = stri_paste(substr(save$날짜,1,4))
save$totalSave = as.numeric(save$현금) + as.numeric(save$카드)
save$category1 = stri_split_fixed(save$분류,">",simplify = TRUE)[,1]
save$category2 = stri_split_fixed(save$분류,">",simplify = TRUE)[,2]
save = save %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalSave)
colnames(save) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
save$type = "save"
#Data Processing - Income
income$날짜 = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7),"-",substr(income$날짜,9,10))
income$yearMonth = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7))
income$year = stri_paste(substr(income$날짜,1,4))
income$category1 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,1]
income$category2 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,2]
income = income %>% filter(!(category1 %in% c("전월이월","저축/보험")))
income = income %>% select(날짜, year, yearMonth, category1, category2, detail, 금액) %>% mutate(카드=NA, 카드분류=NA, total=금액)
colnames(income) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
income$type = "income"
binded_data = rbind(expenditure, save, income)
binded_data$category2 = paste0(binded_data$category1, "_", binded_data$category2)
return(list(binded_data, credit_amount))
}
processing_result = filePreProcessing(expenditureFileList, incomeFileList)
accountBook = processing_result[[1]]
credit_amount = processing_result[[2]]
accountBook = reshape2::dcast(accountBook, 날짜+year+yearMonth+category1+category2+detail+현금+카드+카드분류+total+type ~ type, fun.aggregate = sum, value.var = "total", fill = 0)
colnames(accountBook)[12:14] = c("totalExpenditure", "totalIncome","totalSave")
write.csv(accountBook, "./accountBook.csv",row.names = F)
library(ggplot2)
library(dplyr)
library(data.table)
library(DT)
library(ggthemr)
library(ggsci)
library(ggrepel)
library(readr)
library(scales)
library(stringi)
library(plotly)
source("../common_function.R")
ggthemr('fresh')
accountBook = data.table(accountBook)
accountBook$month_id = substr(accountBook$yearMonth, 6,7)
except_life_category = c("세금/이자_세금", "세금/이자_대출이자", "건강/문화_보장성보험","세금/이자_기타")
#2. 년도별 수입, 지출 현황 ==============================================================================================
input_year = seq(2010, 2011, 1)
year_trend = accountBook %>%
group_by(yearMonth) %>%
summarise(t_income = sum(totalIncome)
,my_income = sum(ifelse(category2 %in% c("주수입_현아급여", "주수입_주원이") | detail == "퇴직금 찾음", 0, totalIncome))
,t_exp = sum(totalExpenditure)
,life_exp = sum(ifelse(category2 %in% except_life_category, 0, totalExpenditure))
,t_save = sum(totalIncome) - sum(totalExpenditure)) %>%
mutate(my_save = my_income - life_exp) %>% #나의 세이브 = 나의 수입 - 생활비 지출
arrange(yearMonth) %>%
mutate(t_cum_save = cumsum(t_save)) %>%
data.table()
View(year_trend)
View(accountBook)
accountBook
accountBook[yearMonth == "2010-07"]
accountBook[yearMonth == "2010-07" & type == "income"]
accountBook[yearMonth == "2010-07" & type == "income"]$category2
accountBook[yearMonth == "2010-07" & type == "income"]$totalIncome
accountBook[yearMonth == "2010-07" & type == "income"]
temp = accountBook[yearMonth == "2010-07" & type == "income"]
ifelse(temp$category2 %in% c("주수입_현아급여", "주수입_주원이") | temp$detail == "퇴직금 찾음", 0)
ifelse(temp$category2 %in% c("주수입_현아급여", "주수입_주원이") | temp$detail == "퇴직금 찾음", 0, temp$totalIncome)
if_else(temp$category2 %in% c("주수입_현아급여", "주수입_주원이") | temp$detail == "퇴직금 찾음", 0, temp$totalIncome)
#2. 년도별 수입, 지출 현황 ==============================================================================================
input_year = seq(2010, 2011, 1)
year_trend = accountBook %>%
group_by(yearMonth) %>%
summarise(t_income = sum(totalIncome)
,my_income = sum(if_else(category2 %in% c("주수입_현아급여", "주수입_주원이") | detail == "퇴직금 찾음", 0, totalIncome))
,t_exp = sum(totalExpenditure)
,life_exp = sum(if_else(category2 %in% except_life_category, 0, totalExpenditure))
,t_save = sum(totalIncome) - sum(totalExpenditure)) %>%
mutate(my_save = my_income - life_exp) %>% #나의 세이브 = 나의 수입 - 생활비 지출
arrange(yearMonth) %>%
mutate(t_cum_save = cumsum(t_save)) %>%
data.table()
View(year_trend)
#2. 년도별 수입, 지출 현황 ==============================================================================================
input_year = seq(2010, 2011, 1)
year_trend = accountBook %>%
group_by(yearMonth) %>%
summarise(t_income = sum(totalIncome)
,my_income = sum(if_else(category2 %in% c("주수입_현아급여", "주수입_주원이") | detail == "퇴직금 찾음", 0, totalIncome))
,t_exp = sum(totalExpenditure)
,life_exp = sum(if_else(category2 %in% except_life_category, 0, totalExpenditure))
,t_save = sum(totalIncome) - sum(totalExpenditure)) %>%
mutate(my_save = my_income - life_exp) %>% #나의 세이브 = 나의 수입 - 생활비 지출
arrange(yearMonth) %>%
mutate(t_cum_save = cumsum(t_save)) %>%
data.table()
View(year_trend)
temp
temp$detail
if_else(temp$category2 %in% c("주수입_현아급여", "주수입_주원이") | temp$detail == "퇴직금 찾음", 0, temp$totalIncome)\
if_else(temp$category2 %in% c("주수입_현아급여", "주수입_주원이") | temp$detail == "퇴직금 찾음", 0, temp$totalIncome)
sum(if_else(temp$category2 %in% c("주수입_현아급여", "주수입_주원이") | temp$detail == "퇴직금 찾음", 0, temp$totalIncome))
runApp('shiny_dashboard')
#2. 년도별 수입, 지출 현황 ==============================================================================================
input_year = seq(2010, 2011, 1)
year_trend = accountBook %>%
group_by(yearMonth) %>%
summarise(t_income = sum(totalIncome)
,my_income = sum(if_else(category2 %in% c("주수입_현아급여", "주수입_주원이") | detail == "퇴직금 찾음", 0, totalIncome))
,t_exp = sum(totalExpenditure)
,life_exp = sum(if_else(category2 %in% except_life_category, 0, totalExpenditure))
,t_save = sum(totalIncome) - sum(totalExpenditure)) %>%
mutate(my_save = my_income - life_exp) %>% #나의 세이브 = 나의 수입 - 생활비 지출
arrange(yearMonth) %>%
mutate(t_cum_save = cumsum(t_save)) %>%
data.table()
year_trend$year = substr(year_trend$yearMonth, 1, 4)
year_trend$my_save_ratio = year_trend$my_save / year_trend$my_income
year_trend$t_save_ratio = year_trend$t_save / year_trend$t_income
year_trend = year_trend[year %in% input_year]
year_trend_melt = melt.data.table(year_trend, id.vars = 'yearMonth'
,measure.vars = c('t_exp','life_exp','t_income','my_income','t_save','t_cum_save','my_save_ratio','t_save_ratio')
,variable.name = 'trend_type'
,value.name = 'trend_value')
ggplot(year_trend_melt[trend_type %in% c('t_income','my_income','t_exp','life_exp','t_save')], aes(x = yearMonth, y = trend_value, group = trend_type, color = trend_type)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = point, breaks = seq(0, 50000000, 1000000)) +
labs(x = "년월", y = "금액") +
scale_color_startrek() +
theme(axis.text.x=element_text(size = 11, face = "bold", angle = 45, hjust = 1)
,axis.text.y=element_text(size = 11, face = "bold")
, plot.title = element_text(hjust = 0.5, face = "bold")
, title = element_text(hjust = 0.5, size = 12, face = "bold")
, legend.position = "top"
, legend.text = element_text(size = 12, face = "bold")
, text = element_text(family = "Kakao Regular"))
ggplot(year_trend_melt[trend_type %in% c('t_cum_save')], aes(x = yearMonth, y = trend_value/100000000, group = trend_type, color = trend_type)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = point, breaks = seq(0, 10, 0.1)) +
labs(x = "년월", y = "금액(억)") +
scale_color_startrek() +
theme(axis.text.x=element_text(size = 11, face = "bold", angle = 45, hjust = 1)
,axis.text.y=element_text(size = 11, face = "bold")
, plot.title = element_text(hjust = 0.5, face = "bold")
, title = element_text(hjust = 0.5, size = 12, face = "bold")
, legend.position = "top"
, axis.ticks.x = element_blank()
, legend.text = element_text(size = 12, face = "bold")
, panel.grid.major.x = element_blank()
, text = element_text(family = "Kakao Regular"))
ggplot(year_trend_melt[trend_type %in% c('t_save_ratio', 'my_save_ratio')], aes(x = yearMonth, y = trend_value, group = trend_type, color = trend_type)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = percent, breaks = extended_breaks(10)) +
geom_hline(yintercept = 0.5, colour = "blue") +
geom_hline(yintercept = 0, colour = "black") +
labs(x = "년월", y = "save_ratio") +
scale_color_startrek() +
theme(axis.text.x=element_text(size = 11, face = "bold", angle = 45, hjust = 1)
,axis.text.y=element_text(size = 11, face = "bold")
, plot.title = element_text(hjust = 0.5, face = "bold")
, title = element_text(hjust = 0.5, size = 12, face = "bold")
, legend.position = "top"
, axis.ticks.x = element_blank()
, legend.text = element_text(size = 12, face = "bold")
, text = element_text(family = "Kakao Regular"))
ggplot(year_trend_melt[trend_type %in% c('t_save_ratio', 'my_save_ratio')], aes(x = yearMonth, y = trend_value, group = trend_type, color = trend_type)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = percent, breaks = extended_breaks(10)) +
geom_hline(yintercept = 0.5, colour = "blue") +
geom_hline(yintercept = 0, colour = "black") +
labs(x = "년월", y = "save_ratio") +
scale_color_startrek() +
theme(axis.text.x=element_text(size = 11, face = "bold", angle = 45, hjust = 1)
,axis.text.y=element_text(size = 11, face = "bold")
, plot.title = element_text(hjust = 0.5, face = "bold")
, title = element_text(hjust = 0.5, size = 12, face = "bold")
, legend.position = "top"
, axis.ticks.x = element_blank()
, legend.text = element_text(size = 12, face = "bold")
, text = element_text(family = "Kakao Regular"))
ggplot(year_trend_melt[trend_type %in% c('t_cum_save')], aes(x = yearMonth, y = trend_value/100000000, group = trend_type, color = trend_type)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = point, breaks = seq(0, 10, 0.1)) +
labs(x = "년월", y = "금액(억)") +
scale_color_startrek() +
theme(axis.text.x=element_text(size = 11, face = "bold", angle = 45, hjust = 1)
,axis.text.y=element_text(size = 11, face = "bold")
, plot.title = element_text(hjust = 0.5, face = "bold")
, title = element_text(hjust = 0.5, size = 12, face = "bold")
, legend.position = "top"
, axis.ticks.x = element_blank()
, legend.text = element_text(size = 12, face = "bold")
, panel.grid.major.x = element_blank()
, text = element_text(family = "Kakao Regular"))
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
paste0(c(2010, 2011, 2012), "-", c('09','08'))
paste0(c(2010, 2011, 2012), "-", c('09','08'), recycle0 = 1)
paste0(c(2010, 2011, 2012), "-", c('09','08'), recycle0 = 2)
paste0(c(2010, 2011, 2012), "-", c('09','08'), recycle0 = 3)
paste0(c(2010, 2011, 2012), "-", c('09','08'), recycle0 = -1)
a = c(2010, 2011, 2012)
b = c('09','08')
expand.grid(a, b)
apply(expand.grid(a,b), 1, pasted)
apply(expand.grid(a,b), 1, paste)
apply(expand.grid(a,b), 1, paste0)
apply(expand.grid(a,b), 1, paste0, collapse = ".")
apply(expand.grid(a,b), 1, paste0, collapse = "-")
paste0(a, '09')
runApp('shiny_dashboard')
