binded_data = rbind(expenditure, save, income)
binded_data$category2 = paste(binded_data$category1, "_", binded_data$category2)
return(rbind(expenditure, save, income))
}
accountBook = filePreProcessing(expenditureFileList, incomeFileList)
accountBook = dcast(accountBook, 날짜+year+yearMonth+category1+category2+detail+현금+카드+카드분류+total+type ~ type, fun.aggregate = sum, value.var = "total", fill = 0)
colnames(accountBook)[12:14] = c("totalExpenditure", "totalIncome","totalSave")
write.csv(accountBook, "./accountBook.csv",row.names = F)
View(accountBook)
rm(list=ls())
gc()
library(reshape2)
require(gdata)
require(stringi)
require(ggplot2)
require(dplyr)
require(reshape)
library(readxl)
expenditureFileList = list.files("./dataFile/expenditure/")
incomeFileList = list.files("./dataFile/income/")
filePreProcessing = function(expenditurFile, incomeFile){
expenditure = NULL
save = NULL
income = NULL
for(i in 1:length(expenditureFileList)){
expenditureTemp = read_xls(paste0("./dataFile/expenditure/",expenditureFileList[i]), sheet = 1)
headName = t(expenditureTemp[3,])
headName = headName[,1]
expenditureTemp = expenditureTemp[4:(nrow(expenditureTemp)-4),]
colnames(expenditureTemp) = headName
colnames(expenditureTemp)[3] = "detail"
expenditureTemp$카드 = as.numeric(expenditureTemp$카드)
expenditureTemp$현금 = as.numeric(expenditureTemp$현금)
saveTemp = expenditureTemp %>% filter(grepl("저축/보험", 분류))
expenditureTemp = expenditureTemp %>% filter(!grepl("저축/보험", 분류))
expenditure = rbind(expenditure, expenditureTemp)
save = rbind(save, saveTemp)
}
for(i in 1:length(incomeFileList)){
incomeTemp = read_xls(paste0("./dataFile/income/",incomeFileList[i]), sheet =  1)
headName = t(incomeTemp[3,])
headName = headName[,1]
incomeTemp = incomeTemp[4:(nrow(incomeTemp)-1),]
colnames(incomeTemp) = headName
incomeTemp$금액 = as.numeric(incomeTemp$금액)
colnames(incomeTemp)[2] = "detail"
income = rbind(income, incomeTemp)
}
#Data Processing - Expenditure
expenditure$날짜 = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7),"-",substr(expenditure$날짜,9,10))
expenditure$yearMonth = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7))
expenditure$year = stri_paste(substr(expenditure$날짜,1,4))
expenditure$totalExpend = as.numeric(expenditure$현금) + as.numeric(expenditure$카드)
expenditure$category1 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,1]
expenditure$category2 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,2]
expenditure = expenditure %>% filter(category1 != "카드대금")
expenditure = expenditure %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalExpend)
colnames(expenditure) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
expenditure$type = "expenditure"
#Data Processing - Save
save$날짜 = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7),"-",substr(save$날짜,9,10))
save$yearMonth = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7))
save$year = stri_paste(substr(save$날짜,1,4))
save$totalSave = as.numeric(save$현금) + as.numeric(save$카드)
save$category1 = stri_split_fixed(save$분류,">",simplify = TRUE)[,1]
save$category2 = stri_split_fixed(save$분류,">",simplify = TRUE)[,2]
save = save %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalSave)
colnames(save) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
save$type = "save"
#Data Processing - Income
income$날짜 = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7),"-",substr(income$날짜,9,10))
income$yearMonth = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7))
income$year = stri_paste(substr(income$날짜,1,4))
income$category1 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,1]
income$category2 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,2]
income = income %>% filter(!(category1 %in% c("전월이월","저축/보험")))
income = income %>% select(날짜, year, yearMonth, category1, category2, detail, 금액) %>% mutate(카드=NA, 카드분류=NA, total=금액)
colnames(income) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
income$type = "income"
binded_data = rbind(expenditure, save, income)
binded_data$category2 = paste(binded_data$category1, "_", binded_data$category2)
return(binded_data)
}
accountBook = filePreProcessing(expenditureFileList, incomeFileList)
accountBook = dcast(accountBook, 날짜+year+yearMonth+category1+category2+detail+현금+카드+카드분류+total+type ~ type, fun.aggregate = sum, value.var = "total", fill = 0)
colnames(accountBook)[12:14] = c("totalExpenditure", "totalIncome","totalSave")
write.csv(accountBook, "./accountBook.csv",row.names = F)
View(accountBook)
rm(list=ls())
gc()
library(reshape2)
require(gdata)
require(stringi)
require(ggplot2)
require(dplyr)
require(reshape)
library(readxl)
expenditureFileList = list.files("./dataFile/expenditure/")
incomeFileList = list.files("./dataFile/income/")
filePreProcessing = function(expenditurFile, incomeFile){
expenditure = NULL
save = NULL
income = NULL
for(i in 1:length(expenditureFileList)){
expenditureTemp = read_xls(paste0("./dataFile/expenditure/",expenditureFileList[i]), sheet = 1)
headName = t(expenditureTemp[3,])
headName = headName[,1]
expenditureTemp = expenditureTemp[4:(nrow(expenditureTemp)-4),]
colnames(expenditureTemp) = headName
colnames(expenditureTemp)[3] = "detail"
expenditureTemp$카드 = as.numeric(expenditureTemp$카드)
expenditureTemp$현금 = as.numeric(expenditureTemp$현금)
saveTemp = expenditureTemp %>% filter(grepl("저축/보험", 분류))
expenditureTemp = expenditureTemp %>% filter(!grepl("저축/보험", 분류))
expenditure = rbind(expenditure, expenditureTemp)
save = rbind(save, saveTemp)
}
for(i in 1:length(incomeFileList)){
incomeTemp = read_xls(paste0("./dataFile/income/",incomeFileList[i]), sheet =  1)
headName = t(incomeTemp[3,])
headName = headName[,1]
incomeTemp = incomeTemp[4:(nrow(incomeTemp)-1),]
colnames(incomeTemp) = headName
incomeTemp$금액 = as.numeric(incomeTemp$금액)
colnames(incomeTemp)[2] = "detail"
income = rbind(income, incomeTemp)
}
#Data Processing - Expenditure
expenditure$날짜 = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7),"-",substr(expenditure$날짜,9,10))
expenditure$yearMonth = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7))
expenditure$year = stri_paste(substr(expenditure$날짜,1,4))
expenditure$totalExpend = as.numeric(expenditure$현금) + as.numeric(expenditure$카드)
expenditure$category1 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,1]
expenditure$category2 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,2]
expenditure = expenditure %>% filter(category1 != "카드대금")
expenditure = expenditure %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalExpend)
colnames(expenditure) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
expenditure$type = "expenditure"
#Data Processing - Save
save$날짜 = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7),"-",substr(save$날짜,9,10))
save$yearMonth = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7))
save$year = stri_paste(substr(save$날짜,1,4))
save$totalSave = as.numeric(save$현금) + as.numeric(save$카드)
save$category1 = stri_split_fixed(save$분류,">",simplify = TRUE)[,1]
save$category2 = stri_split_fixed(save$분류,">",simplify = TRUE)[,2]
save = save %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalSave)
colnames(save) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
save$type = "save"
#Data Processing - Income
income$날짜 = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7),"-",substr(income$날짜,9,10))
income$yearMonth = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7))
income$year = stri_paste(substr(income$날짜,1,4))
income$category1 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,1]
income$category2 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,2]
income = income %>% filter(!(category1 %in% c("전월이월","저축/보험")))
income = income %>% select(날짜, year, yearMonth, category1, category2, detail, 금액) %>% mutate(카드=NA, 카드분류=NA, total=금액)
colnames(income) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
income$type = "income"
binded_data = rbind(expenditure, save, income)
binded_data$category2 = paste(binded_data$category1, "_", binded_data$category2)
return(binded_data)
}
accountBook = filePreProcessing(expenditureFileList, incomeFileList)
accountBook = dcast(accountBook, 날짜+year+yearMonth+category1+category2+detail+현금+카드+카드분류+total+type ~ type, fun.aggregate = sum, value.var = "total", fill = 0)
colnames(accountBook)[12:14] = c("totalExpenditure", "totalIncome","totalSave")
write.csv(accountBook, "./accountBook.csv",row.names = F)
View(accountBook)
library(ggplot2)
library(dplyr)
library(data.table)
# 월별 지출 항목 보기
accountBook
head(monthly_exp_category)
head(accountBook)
# 월별 지출 항목 보기
monthly_exp_category = accountBook %>% group_by(yearMonth, category1, category2) %>% summarise(totalExpenditure = sum(totalExpenditure))
monthly_exp_category
ggplot(monthly_exp_category, aes(x=yearMonth, y=totalExpenditure)) + geom_line()
ggplot(monthly_exp_category, aes(x=yearMonth, y=totalExpenditure)) + geom_line() + th
source("../common_function.R")
ggplot(monthly_exp_category, aes(x=yearMonth, y=totalExpenditure)) + geom_line() + th
ggplot(monthly_exp_category, aes(x=yearMonth, y=totalExpenditure, group = category1)) + geom_line() + th
ggplot(monthly_exp_category, aes(x=category1, y=totalExpenditure, group = category2)) + geom_bar() + th
ggplot(monthly_exp_category, aes(x=category1, y=totalExpenditure, fill = category2)) + geom_bar() + th
ggplot(monthly_exp_category, aes(x=category1, y=totalExpenditure, fill = category2)) + geom_bar(stat = "identity") + th
# 월별 지출 항목 보기
in_yearMonth = '2019-01'
monthly_exp_category = accountBook %>% filter(yearMonth == in_yearMonth) %>% group_by(category1, category2) %>% summarise(totalExpenditure = sum(totalExpenditure))
ggplot(monthly_exp_category, aes(x=category1, y=totalExpenditure, fill = category2)) + geom_bar(stat = "identity") + th
ggplot(monthly_exp_category, aes(x=category1, y=totalExpenditure, group = category2)) + geom_bar(stat = "identity") + th
ggplot(monthly_exp_category, aes(x=category1, y=totalExpenditure, fill = category2)) + geom_bar(stat = "identity") + th
# 월별 지출 항목 보기
in_yearMonth = '2018-12'
monthly_exp_category = accountBook %>% filter(yearMonth == in_yearMonth) %>% group_by(category1, category2) %>% summarise(totalExpenditure = sum(totalExpenditure))
ggplot(monthly_exp_category, aes(x=category1, y=totalExpenditure, fill = category2)) + geom_bar(stat = "identity") + th
ggplot(monthly_exp_category, aes(x=category1, y=totalExpenditure, fill = category2)) + geom_bar(stat = "identity") + scale_y_continuous(labels = point) + th
# 월별 지출 항목 보기
in_yearMonth = '2018-11'
monthly_exp_category = accountBook %>% filter(yearMonth == in_yearMonth) %>% group_by(category1, category2) %>% summarise(totalExpenditure = sum(totalExpenditure))
ggplot(monthly_exp_category, aes(x=category1, y=totalExpenditure, fill = category2)) + geom_bar(stat = "identity") + scale_y_continuous(labels = point) + th
shiny::runApp('shiny_dashboard')
output$networkPlot <- renderText({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
date_Range = as.character(input$dateRange)
print(date_Range)
#startDate =
# 월별 지출 항목 보기
in_yearMonth = '2018-11'
monthly_exp_category = accountBook %>% filter(yearMonth == in_yearMonth) %>% group_by(category1, category2) %>% summarise(totalExpenditure = sum(totalExpenditure))
ggplot(monthly_exp_category, aes(x=category1, y=totalExpenditure, fill = category2)) + geom_bar(stat = "identity") + scale_y_continuous(labels = point) + th
})
runApp('shiny_dashboard')
install.packages("SnowballC")
runApp('shiny_dashboard')
runApp('shiny_dashboard')
monthly_exp_category
head(accountBook)
colnames(accountBook)
colnames(accountBook)[1] = "date_id"
# 월별 지출 항목 보기
#in_yearMonth = '2018-11'
monthly_exp_category = accountBook %>% filter(date_id >= startDate & date_id <= endDate)
runApp('shiny_dashboard')
runApp('shiny_dashboard')
Sys.Date()
library(lubridate)
lubridate::month(Sys.Date())
lubridate::month(Sys.Date()) - 1
lubridate::month(Sys.Date()) - 2
lubridate::month(Sys.Date()) - 3
lubridate::mday(Sys.Date())
lubridate::as.Date("2014-12-31") %m+% months(6)
as.Date("2014-12-31") %m+% months(6)
Sys.Date() %m+% months(6)
Sys.Date() %m-% months(1)
ceiling_date(Sys.Date() %m-% months(1), unit = "month")
ceiling_date(Sys.Date() %m-% months(1))
ceiling_date(Sys.Date() %m-% months(1), unit = "month", change_on_boundary = T)
ceiling_date(Sys.Date() %m-% months(1), unit = "month", change_on_boundary = F)
ceiling_date(Sys.Date() %m-% months(1), unit = "month") -1
ceiling_date(Sys.Date() %m-% months(1), unit = "day")
ceiling_date(Sys.Date() %m-% months(1), unit = "month")
ceiling_date(Sys.Date() %m-% months(2), unit = "month")
runApp('shiny_dashboard')
ceiling_date(Sys.Date() %m-% months(1), unit = "month") - day(1)
ceiling_date(Sys.Date() %m-% months(1), unit = "month") - days(1)
runApp('shiny_dashboard')
runApp('shiny_dashboard')
seq(1,10,1)
seq(as.Date("2010-01"))
as.Date("2010-01")
as.Date("2010-01-01")
month(as.Date("2010-01-01"))
temp = seq(as.Date("2010-01-01"), as.Date("2018-12-01"), by = "month")
temp
format(temp, "%Y-%M")
format(temp, "%Y-%mm")
format(temp, "%Y-%m")
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
runApp('shiny_dashboard')
head(accountBook)
accountBook$yearMonth
substr(accountBook$yearMonth, start = 6, stop = 7)
accountBook %>% filter(substr(accountBook$yearMonth, start = 6, stop = 7) == target_month) %>%
group_by(yearMonth) %>% summarise(totalExpenditure = sum(totalExpenditure))
# 동월 비교
target_month = '03'
accountBook %>% filter(substr(accountBook$yearMonth, start = 6, stop = 7) == target_month) %>%
group_by(yearMonth) %>% summarise(totalExpenditure = sum(totalExpenditure))
temp = accountBook %>%
filter(substr(accountBook$yearMonth, start = 6, stop = 7) == target_month) %>%
group_by(yearMonth) %>%
summarise(totalExpenditure = sum(totalExpenditure))
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) + geom_bar(stat = "identity")
# 동월 비교
target_month = '12'
temp = accountBook %>%
filter(substr(accountBook$yearMonth, start = 6, stop = 7) == target_month) %>%
group_by(yearMonth) %>%
summarise(totalExpenditure = sum(totalExpenditure))
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) + geom_bar(stat = "identity")
# 동월 비교
target_month = '01'
temp = accountBook %>%
filter(substr(accountBook$yearMonth, start = 6, stop = 7) == target_month) %>%
group_by(yearMonth) %>%
summarise(totalExpenditure = sum(totalExpenditure))
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) + geom_bar(stat = "identity")
# 동월 비교
target_month = '02'
temp = accountBook %>%
filter(substr(accountBook$yearMonth, start = 6, stop = 7) == target_month) %>%
group_by(yearMonth) %>%
summarise(totalExpenditure = sum(totalExpenditure))
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) + geom_bar(stat = "identity")
# 동월 비교
target_month = '08'
temp = accountBook %>%
filter(substr(accountBook$yearMonth, start = 6, stop = 7) == target_month) %>%
group_by(yearMonth) %>%
summarise(totalExpenditure = sum(totalExpenditure))
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) + geom_bar(stat = "identity")
# 동월 비교
target_month = '07'
temp = accountBook %>%
filter(substr(accountBook$yearMonth, start = 6, stop = 7) == target_month) %>%
group_by(yearMonth) %>%
summarise(totalExpenditure = sum(totalExpenditure))
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) + geom_bar(stat = "identity")
# 동월 비교
target_month = '10'
temp = accountBook %>%
filter(substr(accountBook$yearMonth, start = 6, stop = 7) == target_month) %>%
group_by(yearMonth) %>%
summarise(totalExpenditure = sum(totalExpenditure))
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) + geom_bar(stat = "identity")
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point) + th
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point)
# 각 월별로 Boxplot
temp  = accountBook %>% mutate(month_t = substr(accountBook$yearMonth, start = 6, stop = 7))
temp
# 각 월별로 Boxplot
temp  = accountBook %>% group_by(yearMonth) %>% summarise(totalExpenditure = sum(totalExpenditure)) %>%
mutate(month_t = substr(accountBook$yearMonth, start = 6, stop = 7))
# 각 월별로 Boxplot
temp  = accountBook %>% group_by(yearMonth) %>% summarise(totalExpenditure = sum(totalExpenditure)) %>%
mutate(month_t = substr(yearMonth, start = 6, stop = 7))
temp
ggplot(temp, aes(x=month_t, y=totalExpenditure)) + geom_boxplot()
ggplot(temp, aes(x=month_t, y=totalExpenditure)) + geom_boxplot(outlier.shape = NA)
ggplot(temp, aes(x=month_t, y=totalExpenditure)) + geom_boxplot(outlier.shape = NA, ) + scale_y_continuous(labels = point, limits = c(0,1000000))
ggplot(temp, aes(x=month_t, y=totalExpenditure)) + geom_boxplot(outlier.shape = NA, ) + scale_y_continuous(labels = point, limits = c(0,10000000))
ggplot(temp, aes(x=month_t, y=totalExpenditure)) + geom_boxplot(outlier.shape = NA) + scale_y_continuous(labels = point, limits = c(0,10000000))
ggplot(temp, aes(x=month_t, y=totalExpenditure)) + geom_boxplot(outlier.shape = 1) + scale_y_continuous(labels = point, limits = c(0,10000000))
ggplot(temp, aes(x=month_t, y=totalExpenditure)) + geom_boxplot(outlier.shape = 1) + scale_y_continuous(labels = point, limits = c(0,))
ggplot(temp, aes(x=month_t, y=totalExpenditure)) + geom_boxplot(outlier.shape = 1) + scale_y_continuous(labels = point, limits = c(0,50000000))
ggplot(temp, aes(x=month_t, y=totalExpenditure)) + geom_boxplot(outlier.shape = 1) + scale_y_continuous(labels = point, limits = c(0,10000000))
25/2
temp
# 각 월별로 Boxplot
temp  = accountBook %>% group_by(yearMonth) %>% summarise(totalExpenditure = sum(totalExpenditure)) %>%
mutate(month_t = substr(yearMonth, start = 6, stop = 7)
,year_t = substr(yearMonth, start = 1, stop = 4))
temp
ggplot(temp, aes(x=month_t, y=totalExpenditure, group=year_t)) + geom_line() + scale_y_continuous(labels = point, limits = c(0,10000000))
ggplot(temp, aes(x=month_t, y=totalExpenditure, group=year_t, fill=year_t)) + geom_line() + scale_y_continuous(labels = point, limits = c(0,10000000))
ggplot(temp, aes(x=month_t, y=totalExpenditure, group=year_t, color=year_t)) + geom_line() + scale_y_continuous(labels = point, limits = c(0,10000000))
ggplot(temp, aes(x=month_t, y=totalExpenditure, group=year_t, color=year_t)) + geom_line() + geom_point() + scale_y_continuous(labels = point, limits = c(0,10000000))
View(temp)
ggplot(temp, aes(x=month_t, y=totalExpenditure, group=year_t, color=year_t)) + geom_line() + geom_point() + scale_y_continuous(labels = point, limits = c(0,30000000))
ggplot(temp, aes(x=month_t, y=totalExpenditure, group=year_t, color=year_t)) + geom_line() + geom_point() + scale_y_continuous(labels = point, limits = c(0,35000000))
# 년도별 지출 규모 ----------------------------------------------
temp = accountBook %>% group_by(year) %>% summarise(totalExpenditure = sum(totalExpenditure))
temp
ggplot(temp, aes(x=year, y = totalExpenditure)) + geom_bar(stat = "identity")
ggplot(temp, aes(x=year, y = totalExpenditure)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,60000000))
ggplot(temp, aes(x=year, y = totalExpenditure)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,65000000))
# 년월별 지출 규모 ----------------------------------------------
temp = accountBook %>% group_by(yearMonth) %>% summarise(totalExpenditure = sum(totalExpenditure))
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,65000000))
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,35000000))
# 년도별 수입 규모 ----------------------------------------------
temp = accountBook %>% group_by(year) %>% summarise(totalIncome = sum(totalIncome))
ggplot(temp, aes(x=year, y = totalIncome)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,65000000))
ggplot(temp, aes(x=year, y = totalIncome)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,8000000))
ggplot(temp, aes(x=year, y = totalIncome)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,100000000))
ggplot(temp, aes(x=year, y = totalIncome)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,1000000000))
ggplot(temp, aes(x=year, y = totalIncome)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,100000000))
ggplot(temp, aes(x=year, y = totalIncome)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,120000000))
ggplot(temp, aes(x=year, y = totalIncome)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,120000000)) + geom_text()
ggplot(temp, aes(x=year, y = totalIncome, label = totalIncome)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,120000000)) + geom_text()
# 년도별 수입 규모 ----------------------------------------------
temp = accountBook %>% group_by(year) %>% summarise(totalIncome = sum(totalIncome)/12)
ggplot(temp, aes(x=year, y = totalIncome, label = totalIncome)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,120000000)) + geom_text()
ggplot(temp, aes(x=year, y = totalIncome, label = totalIncome)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,12000000)) + geom_text()
ggplot(temp, aes(x=year, y = totalIncome, label = round(totalIncome, 1)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,12000000)) + geom_text()
ggplot(temp, aes(x=year, y = totalIncome, label = round(totalIncome, 1)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,12000000)) + geom_text()
ggplot(temp, aes(x=year, y = totalIncome, label = round(totalIncome, 1))) + geom_bar(stat = "identity")+
scale_y_continuous(labels = point, limits = c(0,12000000)) + geom_text()
ggplot(temp, aes(x=year, y = totalIncome, label = round(totalIncome, 1))) + geom_bar(stat = "identity")+
scale_y_continuous(labels = point, limits = c(0,12000000)) + geom_text()
ceiling_date(Sys.Date() %m-% months(2), unit = "month")
ceiling_date(Sys.Date() %m-% months(2), unit = "month"), by = "month"), "%Y-%m")
ceiling_date(Sys.Date() %m-% months(2), unit = "month")
ceiling_date(Sys.Date() %m-% months(2), unit = "month")
library(lubridate)
ceiling_date(Sys.Date() %m-% months(2), unit = "month")
ceiling_date(Sys.Date() %m-% months(1), unit = "month")
Sys.Date() %m-% months(1)
R.version
wd
wdp
getwd()
getwd()
Sys.info()
Sys.getenv()
Sys.getenv()
rm(list=ls())
gc()
library(reshape2)
require(gdata)
require(stringi)
require(ggplot2)
require(dplyr)
require(reshape)
library(readxl)
expenditureFileList = list.files("./dataFile/expenditure/")
incomeFileList = list.files("./dataFile/income/")
filePreProcessing = function(expenditurFile, incomeFile){
expenditure = NULL
save = NULL
income = NULL
for(i in 1:length(expenditureFileList)){
expenditureTemp = read_xls(paste0("./dataFile/expenditure/",expenditureFileList[i]), sheet = 1)
headName = t(expenditureTemp[3,])
headName = headName[,1]
expenditureTemp = expenditureTemp[4:(nrow(expenditureTemp)-4),]
colnames(expenditureTemp) = headName
colnames(expenditureTemp)[3] = "detail"
expenditureTemp$카드 = as.numeric(expenditureTemp$카드)
expenditureTemp$현금 = as.numeric(expenditureTemp$현금)
saveTemp = expenditureTemp %>% filter(grepl("저축/보험", 분류))
expenditureTemp = expenditureTemp %>% filter(!grepl("저축/보험", 분류))
expenditure = rbind(expenditure, expenditureTemp)
save = rbind(save, saveTemp)
}
for(i in 1:length(incomeFileList)){
incomeTemp = read_xls(paste0("./dataFile/income/",incomeFileList[i]), sheet =  1)
headName = t(incomeTemp[3,])
headName = headName[,1]
incomeTemp = incomeTemp[4:(nrow(incomeTemp)-1),]
colnames(incomeTemp) = headName
incomeTemp$금액 = as.numeric(incomeTemp$금액)
colnames(incomeTemp)[2] = "detail"
income = rbind(income, incomeTemp)
}
#Data Processing - Expenditure
expenditure$날짜 = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7),"-",substr(expenditure$날짜,9,10))
expenditure$yearMonth = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7))
expenditure$year = stri_paste(substr(expenditure$날짜,1,4))
expenditure$totalExpend = as.numeric(expenditure$현금) + as.numeric(expenditure$카드)
expenditure$category1 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,1]
expenditure$category2 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,2]
expenditure = expenditure %>% filter(category1 != "카드대금")
expenditure = expenditure %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalExpend)
colnames(expenditure) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
expenditure$type = "expenditure"
#Data Processing - Save
save$날짜 = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7),"-",substr(save$날짜,9,10))
save$yearMonth = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7))
save$year = stri_paste(substr(save$날짜,1,4))
save$totalSave = as.numeric(save$현금) + as.numeric(save$카드)
save$category1 = stri_split_fixed(save$분류,">",simplify = TRUE)[,1]
save$category2 = stri_split_fixed(save$분류,">",simplify = TRUE)[,2]
save = save %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalSave)
colnames(save) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
save$type = "save"
#Data Processing - Income
income$날짜 = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7),"-",substr(income$날짜,9,10))
income$yearMonth = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7))
income$year = stri_paste(substr(income$날짜,1,4))
income$category1 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,1]
income$category2 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,2]
income = income %>% filter(!(category1 %in% c("전월이월","저축/보험")))
income = income %>% select(날짜, year, yearMonth, category1, category2, detail, 금액) %>% mutate(카드=NA, 카드분류=NA, total=금액)
colnames(income) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
income$type = "income"
binded_data = rbind(expenditure, save, income)
binded_data$category2 = paste(binded_data$category1, "_", binded_data$category2)
return(binded_data)
}
accountBook = filePreProcessing(expenditureFileList, incomeFileList)
accountBook = dcast(accountBook, 날짜+year+yearMonth+category1+category2+detail+현금+카드+카드분류+total+type ~ type, fun.aggregate = sum, value.var = "total", fill = 0)
colnames(accountBook)[12:14] = c("totalExpenditure", "totalIncome","totalSave")
write.csv(accountBook, "./accountBook.csv",row.names = F)
library(ggplot2)
library(dplyr)
library(data.table)
source("../common_function.R")
install.packages("rjson")
source("../common_function.R")
# 월별 지출 항목 보기
in_yearMonth = '2018-11'
monthly_exp_category = accountBook %>% filter(yearMonth == in_yearMonth) %>% group_by(category1, category2) %>% summarise(totalExpenditure = sum(totalExpenditure))
ggplot(monthly_exp_category, aes(x=category1, y=totalExpenditure, fill = category2)) + geom_bar(stat = "identity") + scale_y_continuous(labels = point) + th
# 년도별 수입 규모 ----------------------------------------------
temp = accountBook %>% group_by(year) %>% summarise(totalIncome = sum(totalIncome)/12)
ggplot(temp, aes(x=year, y = totalIncome, label = round(totalIncome, 1))) + geom_bar(stat = "identity")+
scale_y_continuous(labels = point, limits = c(0,12000000)) + geom_text()
# 년도별 수입 규모 ----------------------------------------------
temp = accountBook %>% group_by(year) %>% summarise(totalIncome = sum(totalIncome))
ggplot(temp, aes(x=year, y = totalIncome, label = round(totalIncome, 1))) + geom_bar(stat = "identity")+
scale_y_continuous(labels = point, limits = c(0,12000000)) + geom_text()
# 년도별 수입 규모 ----------------------------------------------
temp = accountBook %>% group_by(year) %>% summarise(totalIncome = sum(totalIncome), totalMonthIncome = sum(totalIncome)/12)
ggplot(temp, aes(x=year, y = totalMonthIncome, label = round(totalIncome, 1))) + geom_bar(stat = "identity")+
scale_y_continuous(labels = point, limits = c(0,12000000)) + geom_text()
ggplot(temp, aes(x=year, y = totalIncome, label = round(totalIncome, 1))) + geom_bar(stat = "identity")+
scale_y_continuous(labels = point, limits = c(0,120000000)) + geom_text()
# 년도별 수입 규모 ----------------------------------------------
temp = accountBook %>% group_by(year) %>% summarise(totalIncome = sum(totalIncome), totalMonthIncome = sum(totalIncome)/12)
ggplot(temp, aes(x=year, y = totalMonthIncome, label = round(totalMonthIncome, 1))) + geom_bar(stat = "identity")+
scale_y_continuous(labels = point, limits = c(0,12000000)) + geom_text()
ggplot(temp, aes(x=year, y = totalIncome, label = round(totalIncome, 1))) + geom_bar(stat = "identity")+
scale_y_continuous(labels = point, limits = c(0,120000000)) + geom_text()
View(accountBook)
