require(gdata)
require(stringi)
require(ggplot2)
require(dplyr)
require(reshape)
library(readxl)
expenditureFileList = list.files("./dataFile/expenditure/")
incomeFileList = list.files("./dataFile/income/")
filePreProcessing = function(expenditurFile, incomeFile){
expenditure = NULL
save = NULL
income = NULL
for(i in 1:length(expenditureFileList)){
expenditureTemp = read_xls(paste0("./dataFile/expenditure/",expenditureFileList[i]), sheet = 1)
headName = t(expenditureTemp[3,])
headName = headName[,1]
expenditureTemp = expenditureTemp[4:(nrow(expenditureTemp)-4),]
colnames(expenditureTemp) = headName
colnames(expenditureTemp)[3] = "detail"
expenditureTemp$카드 = as.numeric(expenditureTemp$카드)
expenditureTemp$현금 = as.numeric(expenditureTemp$현금)
saveTemp = expenditureTemp %>% filter(grepl("저축/보험", 분류))
expenditureTemp = expenditureTemp %>% filter(!grepl("저축/보험", 분류))
expenditure = rbind(expenditure, expenditureTemp)
save = rbind(save, saveTemp)
}
for(i in 1:length(incomeFileList)){
incomeTemp = read_xls(paste0("./dataFile/income/",incomeFileList[i]), sheet =  1)
headName = t(incomeTemp[3,])
headName = headName[,1]
incomeTemp = incomeTemp[4:(nrow(incomeTemp)-1),]
colnames(incomeTemp) = headName
incomeTemp$금액 = as.numeric(incomeTemp$금액)
colnames(incomeTemp)[2] = "detail"
income = rbind(income, incomeTemp)
}
#Data Processing - Expenditure
expenditure$날짜 = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7),"-",substr(expenditure$날짜,9,10))
expenditure$yearMonth = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7))
expenditure$year = stri_paste(substr(expenditure$날짜,1,4))
expenditure$totalExpend = as.numeric(expenditure$현금) + as.numeric(expenditure$카드)
expenditure$category1 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,1]
expenditure$category2 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,2]
expenditure = expenditure %>% filter(category1 != "카드대금")
expenditure = expenditure %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalExpend)
colnames(expenditure) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
expenditure$type = "expenditure"
#Data Processing - Save
save$날짜 = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7),"-",substr(save$날짜,9,10))
save$yearMonth = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7))
save$year = stri_paste(substr(save$날짜,1,4))
save$totalSave = as.numeric(save$현금) + as.numeric(save$카드)
save$category1 = stri_split_fixed(save$분류,">",simplify = TRUE)[,1]
save$category2 = stri_split_fixed(save$분류,">",simplify = TRUE)[,2]
save = save %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalSave)
colnames(save) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
save$type = "save"
#Data Processing - Income
income$날짜 = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7),"-",substr(income$날짜,9,10))
income$yearMonth = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7))
income$year = stri_paste(substr(income$날짜,1,4))
income$category1 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,1]
income$category2 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,2]
income = income %>% filter(!(category1 %in% c("전월이월","저축/보험")))
income = income %>% select(날짜, year, yearMonth, category1, category2, detail, 금액) %>% mutate(카드=NA, 카드분류=NA, total=금액)
colnames(income) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
income$type = "income"
binded_data = rbind(expenditure, save, income)
binded_data$category2 = paste(binded_data$category1, "_", binded_data$category2)
return(binded_data)
}
accountBook = filePreProcessing(expenditureFileList, incomeFileList)
accountBook = dcast(accountBook, 날짜+year+yearMonth+category1+category2+detail+현금+카드+카드분류+total+type ~ type, fun.aggregate = sum, value.var = "total", fill = 0)
colnames(accountBook)[12:14] = c("totalExpenditure", "totalIncome","totalSave")
write.csv(accountBook, "./accountBook.csv",row.names = F)
View(accountBook)
library(ggplot2)
library(dplyr)
library(data.table)
source("../common_function.R")
# 월별 지출 항목 보기
in_yearMonth = '2018-11'
monthly_exp_category = accountBook %>% filter(yearMonth == in_yearMonth) %>% group_by(category1, category2) %>% summarise(totalExpenditure = sum(totalExpenditure))
ggplot(monthly_exp_category, aes(x=category1, y=totalExpenditure, fill = category2)) + geom_bar(stat = "identity") + scale_y_continuous(labels = point) + th
# 년월별 지출 규모 ----------------------------------------------
temp = accountBook %>% group_by(yearMonth) %>% summarise(totalExpenditure = sum(totalExpenditure))
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,35000000))
View(temp)
rm(list=ls())
gc()
library(reshape2)
require(gdata)
require(stringi)
require(ggplot2)
require(dplyr)
require(reshape)
library(readxl)
expenditureFileList = list.files("./dataFile/expenditure/")
incomeFileList = list.files("./dataFile/income/")
filePreProcessing = function(expenditurFile, incomeFile){
expenditure = NULL
save = NULL
income = NULL
for(i in 1:length(expenditureFileList)){
expenditureTemp = read_xls(paste0("./dataFile/expenditure/",expenditureFileList[i]), sheet = 1)
headName = t(expenditureTemp[3,])
headName = headName[,1]
expenditureTemp = expenditureTemp[4:(nrow(expenditureTemp)-4),]
colnames(expenditureTemp) = headName
colnames(expenditureTemp)[3] = "detail"
expenditureTemp$카드 = as.numeric(expenditureTemp$카드)
expenditureTemp$현금 = as.numeric(expenditureTemp$현금)
saveTemp = expenditureTemp %>% filter(grepl("저축/보험", 분류))
expenditureTemp = expenditureTemp %>% filter(!grepl("저축/보험", 분류))
expenditure = rbind(expenditure, expenditureTemp)
save = rbind(save, saveTemp)
}
for(i in 1:length(incomeFileList)){
incomeTemp = read_xls(paste0("./dataFile/income/",incomeFileList[i]), sheet =  1)
headName = t(incomeTemp[3,])
headName = headName[,1]
incomeTemp = incomeTemp[4:(nrow(incomeTemp)-1),]
colnames(incomeTemp) = headName
incomeTemp$금액 = as.numeric(incomeTemp$금액)
colnames(incomeTemp)[2] = "detail"
income = rbind(income, incomeTemp)
}
#Data Processing - Expenditure
expenditure$날짜 = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7),"-",substr(expenditure$날짜,9,10))
expenditure$yearMonth = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7))
expenditure$year = stri_paste(substr(expenditure$날짜,1,4))
expenditure$totalExpend = as.numeric(expenditure$현금) + as.numeric(expenditure$카드)
expenditure$category1 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,1]
expenditure$category2 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,2]
expenditure = expenditure %>% filter(category1 != "카드대금")
expenditure = expenditure %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalExpend)
colnames(expenditure) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
expenditure$type = "expenditure"
#Data Processing - Save
save$날짜 = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7),"-",substr(save$날짜,9,10))
save$yearMonth = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7))
save$year = stri_paste(substr(save$날짜,1,4))
save$totalSave = as.numeric(save$현금) + as.numeric(save$카드)
save$category1 = stri_split_fixed(save$분류,">",simplify = TRUE)[,1]
save$category2 = stri_split_fixed(save$분류,">",simplify = TRUE)[,2]
save = save %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalSave)
colnames(save) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
save$type = "save"
#Data Processing - Income
income$날짜 = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7),"-",substr(income$날짜,9,10))
income$yearMonth = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7))
income$year = stri_paste(substr(income$날짜,1,4))
income$category1 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,1]
income$category2 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,2]
income = income %>% filter(!(category1 %in% c("전월이월","저축/보험")))
income = income %>% select(날짜, year, yearMonth, category1, category2, detail, 금액) %>% mutate(카드=NA, 카드분류=NA, total=금액)
colnames(income) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
income$type = "income"
binded_data = rbind(expenditure, save, income)
binded_data$category2 = paste(binded_data$category1, "_", binded_data$category2)
return(binded_data)
}
accountBook = filePreProcessing(expenditureFileList, incomeFileList)
accountBook = dcast(accountBook, 날짜+year+yearMonth+category1+category2+detail+현금+카드+카드분류+total+type ~ type, fun.aggregate = sum, value.var = "total", fill = 0)
colnames(accountBook)[12:14] = c("totalExpenditure", "totalIncome","totalSave")
write.csv(accountBook, "./accountBook.csv",row.names = F)
expenditureFileList = list.files("./dataFile/expenditure/")
rm(list=ls())
gc()
library(reshape2)
require(gdata)
require(stringi)
require(ggplot2)
require(dplyr)
require(reshape)
library(readxl)
expenditureFileList = list.files("./dataFile/expenditure/")
incomeFileList = list.files("./dataFile/income/")
filePreProcessing = function(expenditurFile, incomeFile){
expenditure = NULL
save = NULL
income = NULL
for(i in 1:length(expenditureFileList)){
expenditureTemp = read_xls(paste0("./dataFile/expenditure/",expenditureFileList[i]), sheet = 1)
headName = t(expenditureTemp[3,])
headName = headName[,1]
expenditureTemp = expenditureTemp[4:(nrow(expenditureTemp)-4),]
colnames(expenditureTemp) = headName
colnames(expenditureTemp)[3] = "detail"
expenditureTemp$카드 = as.numeric(expenditureTemp$카드)
expenditureTemp$현금 = as.numeric(expenditureTemp$현금)
saveTemp = expenditureTemp %>% filter(grepl("저축/보험", 분류))
expenditureTemp = expenditureTemp %>% filter(!grepl("저축/보험", 분류))
expenditure = rbind(expenditure, expenditureTemp)
save = rbind(save, saveTemp)
}
for(i in 1:length(incomeFileList)){
incomeTemp = read_xls(paste0("./dataFile/income/",incomeFileList[i]), sheet =  1)
headName = t(incomeTemp[3,])
headName = headName[,1]
incomeTemp = incomeTemp[4:(nrow(incomeTemp)-1),]
colnames(incomeTemp) = headName
incomeTemp$금액 = as.numeric(incomeTemp$금액)
colnames(incomeTemp)[2] = "detail"
income = rbind(income, incomeTemp)
}
#Data Processing - Expenditure
expenditure$날짜 = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7),"-",substr(expenditure$날짜,9,10))
expenditure$yearMonth = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7))
expenditure$year = stri_paste(substr(expenditure$날짜,1,4))
expenditure$totalExpend = as.numeric(expenditure$현금) + as.numeric(expenditure$카드)
expenditure$category1 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,1]
expenditure$category2 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,2]
expenditure = expenditure %>% filter(category1 != "카드대금")
expenditure = expenditure %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalExpend)
colnames(expenditure) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
expenditure$type = "expenditure"
#Data Processing - Save
save$날짜 = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7),"-",substr(save$날짜,9,10))
save$yearMonth = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7))
save$year = stri_paste(substr(save$날짜,1,4))
save$totalSave = as.numeric(save$현금) + as.numeric(save$카드)
save$category1 = stri_split_fixed(save$분류,">",simplify = TRUE)[,1]
save$category2 = stri_split_fixed(save$분류,">",simplify = TRUE)[,2]
save = save %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalSave)
colnames(save) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
save$type = "save"
#Data Processing - Income
income$날짜 = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7),"-",substr(income$날짜,9,10))
income$yearMonth = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7))
income$year = stri_paste(substr(income$날짜,1,4))
income$category1 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,1]
income$category2 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,2]
income = income %>% filter(!(category1 %in% c("전월이월","저축/보험")))
income = income %>% select(날짜, year, yearMonth, category1, category2, detail, 금액) %>% mutate(카드=NA, 카드분류=NA, total=금액)
colnames(income) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
income$type = "income"
binded_data = rbind(expenditure, save, income)
binded_data$category2 = paste(binded_data$category1, "_", binded_data$category2)
return(binded_data)
}
accountBook = filePreProcessing(expenditureFileList, incomeFileList)
accountBook = dcast(accountBook, 날짜+year+yearMonth+category1+category2+detail+현금+카드+카드분류+total+type ~ type, fun.aggregate = sum, value.var = "total", fill = 0)
colnames(accountBook)[12:14] = c("totalExpenditure", "totalIncome","totalSave")
write.csv(accountBook, "./accountBook.csv",row.names = F)
View(accountBook)
15/350
#expenditureFileList = list.files("./dataFile/expenditure/")
#incomeFileList = list.files("./dataFile/income/")
expenditureFileList = list.files("~/Library/Mobile Documents/com~apple~CloudDocs/개인용/dataFile/expenditure/")
incomeFileList = list.files("~/Library/Mobile Documents/com~apple~CloudDocs/개인용/dataFile/income/")
library(reshape2)
rm(list=ls())
gc()
library(reshape2)
require(gdata)
require(stringi)
require(ggplot2)
require(dplyr)
require(reshape)
library(readxl)
#expenditureFileList = list.files("./dataFile/expenditure/")
#incomeFileList = list.files("./dataFile/income/")
expenditureFileList = list.files("~/Library/Mobile Documents/com~apple~CloudDocs/개인용/dataFile/expenditure/")
incomeFileList = list.files("~/Library/Mobile Documents/com~apple~CloudDocs/개인용/dataFile/income/")
filePreProcessing = function(expenditurFile, incomeFile){
expenditure = NULL
save = NULL
income = NULL
for(i in 1:length(expenditureFileList)){
expenditureTemp = read_xls(paste0("./dataFile/expenditure/",expenditureFileList[i]), sheet = 1)
headName = t(expenditureTemp[3,])
headName = headName[,1]
expenditureTemp = expenditureTemp[4:(nrow(expenditureTemp)-4),]
colnames(expenditureTemp) = headName
colnames(expenditureTemp)[3] = "detail"
expenditureTemp$카드 = as.numeric(expenditureTemp$카드)
expenditureTemp$현금 = as.numeric(expenditureTemp$현금)
saveTemp = expenditureTemp %>% filter(grepl("저축/보험", 분류))
expenditureTemp = expenditureTemp %>% filter(!grepl("저축/보험", 분류))
expenditure = rbind(expenditure, expenditureTemp)
save = rbind(save, saveTemp)
}
for(i in 1:length(incomeFileList)){
incomeTemp = read_xls(paste0("./dataFile/income/",incomeFileList[i]), sheet =  1)
headName = t(incomeTemp[3,])
headName = headName[,1]
incomeTemp = incomeTemp[4:(nrow(incomeTemp)-1),]
colnames(incomeTemp) = headName
incomeTemp$금액 = as.numeric(incomeTemp$금액)
colnames(incomeTemp)[2] = "detail"
income = rbind(income, incomeTemp)
}
#Data Processing - Expenditure
expenditure$날짜 = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7),"-",substr(expenditure$날짜,9,10))
expenditure$yearMonth = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7))
expenditure$year = stri_paste(substr(expenditure$날짜,1,4))
expenditure$totalExpend = as.numeric(expenditure$현금) + as.numeric(expenditure$카드)
expenditure$category1 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,1]
expenditure$category2 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,2]
expenditure = expenditure %>% filter(category1 != "카드대금")
expenditure = expenditure %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalExpend)
colnames(expenditure) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
expenditure$type = "expenditure"
#Data Processing - Save
save$날짜 = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7),"-",substr(save$날짜,9,10))
save$yearMonth = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7))
save$year = stri_paste(substr(save$날짜,1,4))
save$totalSave = as.numeric(save$현금) + as.numeric(save$카드)
save$category1 = stri_split_fixed(save$분류,">",simplify = TRUE)[,1]
save$category2 = stri_split_fixed(save$분류,">",simplify = TRUE)[,2]
save = save %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalSave)
colnames(save) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
save$type = "save"
#Data Processing - Income
income$날짜 = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7),"-",substr(income$날짜,9,10))
income$yearMonth = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7))
income$year = stri_paste(substr(income$날짜,1,4))
income$category1 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,1]
income$category2 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,2]
income = income %>% filter(!(category1 %in% c("전월이월","저축/보험")))
income = income %>% select(날짜, year, yearMonth, category1, category2, detail, 금액) %>% mutate(카드=NA, 카드분류=NA, total=금액)
colnames(income) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
income$type = "income"
binded_data = rbind(expenditure, save, income)
binded_data$category2 = paste(binded_data$category1, "_", binded_data$category2)
return(binded_data)
}
accountBook = filePreProcessing(expenditureFileList, incomeFileList)
accountBook = filePreProcessing(expenditureFileList, incomeFileList)
expenditureFileList
rm(list=ls())
gc()
library(reshape2)
require(gdata)
require(stringi)
require(ggplot2)
require(dplyr)
require(reshape)
library(readxl)
#expenditureFileList = list.files("./dataFile/expenditure/")
#incomeFileList = list.files("./dataFile/income/")
expenditureFileList = list.files("~/Library/Mobile Documents/com~apple~CloudDocs/개인용/dataFile/expenditure/")
incomeFileList = list.files("~/Library/Mobile Documents/com~apple~CloudDocs/개인용/dataFile/income/")
data_dir_path = "~/Library/Mobile Documents/com~apple~CloudDocs/개인용/dataFile"
filePreProcessing = function(expenditurFile, incomeFile){
expenditure = NULL
save = NULL
income = NULL
for(i in 1:length(expenditureFileList)){
expenditureTemp = read_xls(paste0(data_dir_path,"/expenditure/",expenditureFileList[i]), sheet = 1)
headName = t(expenditureTemp[3,])
headName = headName[,1]
expenditureTemp = expenditureTemp[4:(nrow(expenditureTemp)-4),]
colnames(expenditureTemp) = headName
colnames(expenditureTemp)[3] = "detail"
expenditureTemp$카드 = as.numeric(expenditureTemp$카드)
expenditureTemp$현금 = as.numeric(expenditureTemp$현금)
saveTemp = expenditureTemp %>% filter(grepl("저축/보험", 분류))
expenditureTemp = expenditureTemp %>% filter(!grepl("저축/보험", 분류))
expenditure = rbind(expenditure, expenditureTemp)
save = rbind(save, saveTemp)
}
for(i in 1:length(incomeFileList)){
incomeTemp = read_xls(paste0(data_dir_path,"/income/",incomeFileList[i]), sheet =  1)
headName = t(incomeTemp[3,])
headName = headName[,1]
incomeTemp = incomeTemp[4:(nrow(incomeTemp)-1),]
colnames(incomeTemp) = headName
incomeTemp$금액 = as.numeric(incomeTemp$금액)
colnames(incomeTemp)[2] = "detail"
income = rbind(income, incomeTemp)
}
#Data Processing - Expenditure
expenditure$날짜 = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7),"-",substr(expenditure$날짜,9,10))
expenditure$yearMonth = stri_paste(substr(expenditure$날짜,1,4),"-",substr(expenditure$날짜,6,7))
expenditure$year = stri_paste(substr(expenditure$날짜,1,4))
expenditure$totalExpend = as.numeric(expenditure$현금) + as.numeric(expenditure$카드)
expenditure$category1 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,1]
expenditure$category2 = stri_split_fixed(expenditure$분류,">",simplify = TRUE)[,2]
expenditure = expenditure %>% filter(category1 != "카드대금")
expenditure = expenditure %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalExpend)
colnames(expenditure) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
expenditure$type = "expenditure"
#Data Processing - Save
save$날짜 = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7),"-",substr(save$날짜,9,10))
save$yearMonth = stri_paste(substr(save$날짜,1,4),"-",substr(save$날짜,6,7))
save$year = stri_paste(substr(save$날짜,1,4))
save$totalSave = as.numeric(save$현금) + as.numeric(save$카드)
save$category1 = stri_split_fixed(save$분류,">",simplify = TRUE)[,1]
save$category2 = stri_split_fixed(save$분류,">",simplify = TRUE)[,2]
save = save %>% select(날짜, year, yearMonth, category1, category2, detail, 현금, 카드, 카드분류, totalSave)
colnames(save) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
save$type = "save"
#Data Processing - Income
income$날짜 = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7),"-",substr(income$날짜,9,10))
income$yearMonth = stri_paste(substr(income$날짜,1,4),"-",substr(income$날짜,6,7))
income$year = stri_paste(substr(income$날짜,1,4))
income$category1 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,1]
income$category2 = stri_split_fixed(income$분류, ">", simplify = TRUE)[,2]
income = income %>% filter(!(category1 %in% c("전월이월","저축/보험")))
income = income %>% select(날짜, year, yearMonth, category1, category2, detail, 금액) %>% mutate(카드=NA, 카드분류=NA, total=금액)
colnames(income) = c("날짜", "year", "yearMonth", "category1", "category2", "detail", "현금", "카드", "카드분류", "total")
income$type = "income"
binded_data = rbind(expenditure, save, income)
binded_data$category2 = paste(binded_data$category1, "_", binded_data$category2)
return(binded_data)
}
accountBook = filePreProcessing(expenditureFileList, incomeFileList)
accountBook = dcast(accountBook, 날짜+year+yearMonth+category1+category2+detail+현금+카드+카드분류+total+type ~ type, fun.aggregate = sum, value.var = "total", fill = 0)
colnames(accountBook)[12:14] = c("totalExpenditure", "totalIncome","totalSave")
write.csv(accountBook, "./accountBook.csv",row.names = F)
View(accountBook)
library(ggplot2)
library(dplyr)
library(data.table)
source("../common_function.R")
# 월별 지출 항목 보기
in_yearMonth = '2018-11'
monthly_exp_category = accountBook %>% filter(yearMonth == in_yearMonth) %>% group_by(category1, category2) %>% summarise(totalExpenditure = sum(totalExpenditure))
ggplot(monthly_exp_category, aes(x=category1, y=totalExpenditure, fill = category2)) + geom_bar(stat = "identity") + scale_y_continuous(labels = point) + th
# 동월 비교 ----------------------------------------------
target_month = '03'
temp = accountBook %>%
filter(substr(accountBook$yearMonth, start = 6, stop = 7) == target_month) %>%
group_by(yearMonth) %>%
summarise(totalExpenditure = sum(totalExpenditure))
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) +
geom_bar(stat = "identity")+
scale_y_continuous(labels = point) + th
# 각 월별로 Boxplot 및 라인 ----------------------------------------------
temp  = accountBook %>% group_by(yearMonth) %>% summarise(totalExpenditure = sum(totalExpenditure)) %>%
mutate(month_t = substr(yearMonth, start = 6, stop = 7)
,year_t = substr(yearMonth, start = 1, stop = 4))
ggplot(temp, aes(x=month_t, y=totalExpenditure)) + geom_boxplot(outlier.shape = 1) + scale_y_continuous(labels = point, limits = c(0,10000000))
ggplot(temp, aes(x=month_t, y=totalExpenditure, group=year_t, color=year_t)) + geom_line() + geom_point() + scale_y_continuous(labels = point, limits = c(0,35000000))
ggplot(temp, aes(x=month_t, y=totalExpenditure)) + geom_boxplot(outlier.shape = 1) + scale_y_continuous(labels = point, limits = c(0,10000000))
# 년도별 지출 규모 ----------------------------------------------
temp = accountBook %>% group_by(year) %>% summarise(totalExpenditure = sum(totalExpenditure))
ggplot(temp, aes(x=year, y = totalExpenditure)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,65000000))
# 년도별 지출 규모 ----------------------------------------------
temp = accountBook %>% group_by(year) %>% summarise(totalExpenditure = sum(totalExpenditure))
ggplot(temp, aes(x=year, y = totalExpenditure, label = totalExpenditure)) +
geom_bar(stat = "identity")+
geom_text() +
scale_y_continuous(labels = point, limits = c(0,65000000))
ggplot(temp, aes(x=year, y = totalExpenditure, label = totalExpenditure)) +
geom_bar(stat = "identity")+
geom_text(position = position=position_stack(0.5)) +
scale_y_continuous(labels = point, limits = c(0,65000000))
ggplot(temp, aes(x=year, y = totalExpenditure, label = totalExpenditure)) +
geom_bar(stat = "identity")+
geom_text(position = position=position_stack(0.5)) +
scale_y_continuous(labels = point, limits = c(0,65000000))
ggplot(temp, aes(x=year, y = totalExpenditure, label = totalExpenditure)) +
geom_bar(stat = "identity")+
geom_text(position = position=position_stack(0.5)) +
scale_y_continuous(labels = point, limits = c(0,65000000))
ggplot(temp, aes(x=year, y = totalExpenditure, label = totalExpenditure))
ggplot(temp, aes(x=year, y = totalExpenditure, label = totalExpenditure)) +
geom_bar(stat = "identity")+
geom_text(position = position=position_stack(0.5)) +
scale_y_continuous(labels = point, limits = c(0,65000000))
ggplot(temp, aes(x=year, y = totalExpenditure, label = totalExpenditure)) +
geom_bar(stat = "identity")+
geom_text( position=position_stack(0.5)) +
scale_y_continuous(labels = point, limits = c(0,65000000))
ggplot(temp, aes(x=year, y = totalExpenditure, label = totalExpenditure)) +
geom_bar(stat = "identity")+
geom_text( position=position_stack(1)) +
scale_y_continuous(labels = point, limits = c(0,65000000))
ggplot(temp, aes(x=year, y = totalExpenditure, label = totalExpenditure)) +
geom_bar(stat = "identity")+
geom_text( position=position_stack(1.2)) +
scale_y_continuous(labels = point, limits = c(0,65000000))
ggplot(temp, aes(x=year, y = totalExpenditure, label = totalExpenditure)) +
geom_bar(stat = "identity")+
geom_text( position=position_stack(1.1)) +
scale_y_continuous(labels = point, limits = c(0,65000000))
ggplot(temp, aes(x=year, y = totalExpenditure, label = totalExpenditure)) +
geom_bar(stat = "identity")+
geom_text( position=position_stack(0.5)) +
scale_y_continuous(labels = point, limits = c(0,65000000))
# 년월별 지출 규모 ----------------------------------------------
temp = accountBook %>% group_by(yearMonth) %>% summarise(totalExpenditure = sum(totalExpenditure))
ggplot(temp, aes(x=yearMonth, y = totalExpenditure)) + geom_bar(stat = "identity")+ scale_y_continuous(labels = point, limits = c(0,35000000))
# 년도별 수입 규모 ----------------------------------------------
temp = accountBook %>% group_by(year) %>% summarise(totalIncome = sum(totalIncome), totalMonthIncome = sum(totalIncome)/12)
ggplot(temp, aes(x=year, y = totalMonthIncome, label = round(totalMonthIncome, 1))) + geom_bar(stat = "identity")+
scale_y_continuous(labels = point, limits = c(0,12000000)) + geom_text()
ggplot(temp, aes(x=year, y = totalMonthIncome, label = round(totalMonthIncome, 1))) +
geom_bar(stat = "identity") +
geom_text(position=position_stack(0.5)) +
scale_y_continuous(labels = point, limits = c(0,12000000))
ggplot(temp, aes(x=year, y = totalIncome, label = point(round(totalIncome, 1)))) +
geom_bar(stat = "identity") +
geom_text(size = 3, vjust = -0.1) +
scale_y_continuous(labels = point, limits = c(0,120000000))
8900 + 530 + 660
8900 + 530 + 660 + 140
shiny::runApp('shiny_dashboard')
10230 / 12
# 년도별 수입 규모 ----------------------------------------------
temp = accountBook %>% group_by(year) %>% summarise(totalIncome = sum(totalIncome), totalMonthIncome = sum(totalIncome)/12)
ggplot(temp, aes(x=year, y = totalMonthIncome, label = round(totalMonthIncome, 1))) +
geom_bar(stat = "identity") +
geom_text(position=position_stack(0.5)) +
scale_y_continuous(labels = point, limits = c(0,12000000))
accountBook
accountBook
str(accountBook)
accountBook
